/* eslint-disable */

/* THIS FILE IS AUTOGENERATED. CHANGES WILL BE LOST ON SUBSEQUENT RUNS. */

declare namespace Queries {

type Maybe<T> = T | null;
type InputMaybe<T> = T | null;
type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
type Scalars = {
  /** The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID. */
  ID: string;
  /** The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. */
  String: string;
  /** The `Boolean` scalar type represents `true` or `false`. */
  Boolean: boolean;
  /** The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. */
  Int: number;
  /** The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point). */
  Float: number;
  /** A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar. */
  Date: string;
  GatsbyImageData: import('gatsby-plugin-image').IGatsbyImageData;
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: Record<string, unknown>;
};

type AVIFOptions = {
  readonly lossless: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
  readonly speed: InputMaybe<Scalars['Int']>;
};

type BlurredOptions = {
  /** Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this */
  readonly toFormat: InputMaybe<ImageFormat>;
  /** Width of the generated low-res preview. Default is 20px */
  readonly width: InputMaybe<Scalars['Int']>;
};

type BooleanQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Boolean']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
  readonly ne: InputMaybe<Scalars['Boolean']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Boolean']>>>;
};

type ContentfulAsset = ContentfulReference & Node & RemoteFile & {
  readonly children: ReadonlyArray<Node>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly description: Maybe<Scalars['String']>;
  readonly file: Maybe<ContentfulAssetFile>;
  readonly filename: Scalars['String'];
  readonly filesize: Maybe<Scalars['Int']>;
  /** Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info. */
  readonly gatsbyImage: Maybe<Scalars['GatsbyImageData']>;
  readonly gatsbyImageData: Maybe<Scalars['JSON']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly mimeType: Scalars['String'];
  readonly node_locale: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly placeholderUrl: Maybe<Scalars['String']>;
  readonly publicUrl: Scalars['String'];
  readonly resize: Maybe<RemoteFileResize>;
  readonly size: Maybe<Scalars['Int']>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulAssetSys>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
  readonly url: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};


type ContentfulAsset_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulAsset_gatsbyImageArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  backgroundColor: InputMaybe<Scalars['String']>;
  breakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  cropFocus: InputMaybe<ReadonlyArray<InputMaybe<RemoteFileCropFocus>>>;
  fit?: InputMaybe<RemoteFileFit>;
  formats?: InputMaybe<ReadonlyArray<RemoteFileFormat>>;
  height: InputMaybe<Scalars['Int']>;
  layout?: InputMaybe<RemoteFileLayout>;
  outputPixelDensities?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder?: InputMaybe<RemoteFilePlaceholder>;
  quality?: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  width: InputMaybe<Scalars['Int']>;
};


type ContentfulAsset_gatsbyImageDataArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  backgroundColor: InputMaybe<Scalars['String']>;
  breakpoints: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  cornerRadius?: InputMaybe<Scalars['Int']>;
  cropFocus: InputMaybe<ContentfulImageCropFocus>;
  formats?: InputMaybe<ReadonlyArray<InputMaybe<GatsbyImageFormat>>>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  layout: InputMaybe<GatsbyImageLayout>;
  outputPixelDensities: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder: InputMaybe<GatsbyImagePlaceholder>;
  quality: InputMaybe<Scalars['Int']>;
  resizingBehavior: InputMaybe<ImageResizingBehavior>;
  sizes: InputMaybe<Scalars['String']>;
  width: InputMaybe<Scalars['Int']>;
};


type ContentfulAsset_resizeArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  cropFocus: InputMaybe<ReadonlyArray<InputMaybe<RemoteFileCropFocus>>>;
  fit?: InputMaybe<RemoteFileFit>;
  format?: InputMaybe<RemoteFileFormat>;
  height: InputMaybe<Scalars['Int']>;
  quality?: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};


type ContentfulAsset_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulAssetConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulAssetEdge>;
  readonly group: ReadonlyArray<ContentfulAssetGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulAsset>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulAssetConnection_distinctArgs = {
  field: ContentfulAssetFieldsEnum;
};


type ContentfulAssetConnection_groupArgs = {
  field: ContentfulAssetFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulAssetConnection_maxArgs = {
  field: ContentfulAssetFieldsEnum;
};


type ContentfulAssetConnection_minArgs = {
  field: ContentfulAssetFieldsEnum;
};


type ContentfulAssetConnection_sumArgs = {
  field: ContentfulAssetFieldsEnum;
};

type ContentfulAssetEdge = {
  readonly next: Maybe<ContentfulAsset>;
  readonly node: ContentfulAsset;
  readonly previous: Maybe<ContentfulAsset>;
};

type ContentfulAssetFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'contentful_id'
  | 'createdAt'
  | 'description'
  | 'file.contentType'
  | 'file.details.image.height'
  | 'file.details.image.width'
  | 'file.details.size'
  | 'file.fileName'
  | 'file.url'
  | 'filename'
  | 'filesize'
  | 'gatsbyImage'
  | 'gatsbyImageData'
  | 'height'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mimeType'
  | 'node_locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'placeholderUrl'
  | 'publicUrl'
  | 'resize.height'
  | 'resize.src'
  | 'resize.width'
  | 'size'
  | 'spaceId'
  | 'sys.revision'
  | 'sys.type'
  | 'title'
  | 'updatedAt'
  | 'url'
  | 'width';

type ContentfulAssetFile = {
  readonly contentType: Maybe<Scalars['String']>;
  readonly details: Maybe<ContentfulAssetFileDetails>;
  readonly fileName: Maybe<Scalars['String']>;
  readonly url: Maybe<Scalars['String']>;
};

type ContentfulAssetFileDetails = {
  readonly image: Maybe<ContentfulAssetFileDetailsImage>;
  readonly size: Maybe<Scalars['Int']>;
};

type ContentfulAssetFileDetailsFilterInput = {
  readonly image: InputMaybe<ContentfulAssetFileDetailsImageFilterInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
};

type ContentfulAssetFileDetailsImage = {
  readonly height: Maybe<Scalars['Int']>;
  readonly width: Maybe<Scalars['Int']>;
};

type ContentfulAssetFileDetailsImageFilterInput = {
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type ContentfulAssetFileFilterInput = {
  readonly contentType: InputMaybe<StringQueryOperatorInput>;
  readonly details: InputMaybe<ContentfulAssetFileDetailsFilterInput>;
  readonly fileName: InputMaybe<StringQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulAssetFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly file: InputMaybe<ContentfulAssetFileFilterInput>;
  readonly filename: InputMaybe<StringQueryOperatorInput>;
  readonly filesize: InputMaybe<IntQueryOperatorInput>;
  readonly gatsbyImage: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  readonly gatsbyImageData: InputMaybe<JSONQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mimeType: InputMaybe<StringQueryOperatorInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly placeholderUrl: InputMaybe<StringQueryOperatorInput>;
  readonly publicUrl: InputMaybe<StringQueryOperatorInput>;
  readonly resize: InputMaybe<RemoteFileResizeFilterInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulAssetSysFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
  readonly url: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type ContentfulAssetGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulAssetEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulAssetGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulAsset>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulAssetGroupConnection_distinctArgs = {
  field: ContentfulAssetFieldsEnum;
};


type ContentfulAssetGroupConnection_groupArgs = {
  field: ContentfulAssetFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulAssetGroupConnection_maxArgs = {
  field: ContentfulAssetFieldsEnum;
};


type ContentfulAssetGroupConnection_minArgs = {
  field: ContentfulAssetFieldsEnum;
};


type ContentfulAssetGroupConnection_sumArgs = {
  field: ContentfulAssetFieldsEnum;
};

type ContentfulAssetSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ContentfulAssetFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ContentfulAssetSys = {
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulAssetSysFilterInput = {
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulComponent = ContentfulEntry & ContentfulReference & Node & {
  readonly children: ReadonlyArray<Node>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly date: Maybe<Scalars['Date']>;
  readonly heading: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly image: Maybe<ContentfulImage>;
  readonly internal: Internal;
  readonly label: Maybe<Scalars['String']>;
  readonly links: Maybe<ReadonlyArray<Maybe<ContentfulLink>>>;
  readonly namedStrings: Maybe<ReadonlyArray<Maybe<ContentfulNameValuePair>>>;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly richText: Maybe<ContentfulComponentRichText>;
  readonly section: Maybe<ReadonlyArray<Maybe<ContentfulSection>>>;
  readonly slug: Maybe<Scalars['String']>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly subheading: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulComponentSys>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type ContentfulComponent_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulComponent_dateArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulComponent_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulComponentConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulComponentEdge>;
  readonly group: ReadonlyArray<ContentfulComponentGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulComponent>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulComponentConnection_distinctArgs = {
  field: ContentfulComponentFieldsEnum;
};


type ContentfulComponentConnection_groupArgs = {
  field: ContentfulComponentFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulComponentConnection_maxArgs = {
  field: ContentfulComponentFieldsEnum;
};


type ContentfulComponentConnection_minArgs = {
  field: ContentfulComponentFieldsEnum;
};


type ContentfulComponentConnection_sumArgs = {
  field: ContentfulComponentFieldsEnum;
};

type ContentfulComponentEdge = {
  readonly next: Maybe<ContentfulComponent>;
  readonly node: ContentfulComponent;
  readonly previous: Maybe<ContentfulComponent>;
};

type ContentfulComponentFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'contentful_id'
  | 'createdAt'
  | 'date'
  | 'heading'
  | 'id'
  | 'image.altText'
  | 'image.asset.children'
  | 'image.asset.children.children'
  | 'image.asset.children.id'
  | 'image.asset.contentful_id'
  | 'image.asset.createdAt'
  | 'image.asset.description'
  | 'image.asset.file.contentType'
  | 'image.asset.file.fileName'
  | 'image.asset.file.url'
  | 'image.asset.filename'
  | 'image.asset.filesize'
  | 'image.asset.gatsbyImage'
  | 'image.asset.gatsbyImageData'
  | 'image.asset.height'
  | 'image.asset.id'
  | 'image.asset.internal.content'
  | 'image.asset.internal.contentDigest'
  | 'image.asset.internal.description'
  | 'image.asset.internal.fieldOwners'
  | 'image.asset.internal.ignoreType'
  | 'image.asset.internal.mediaType'
  | 'image.asset.internal.owner'
  | 'image.asset.internal.type'
  | 'image.asset.mimeType'
  | 'image.asset.node_locale'
  | 'image.asset.parent.children'
  | 'image.asset.parent.id'
  | 'image.asset.placeholderUrl'
  | 'image.asset.publicUrl'
  | 'image.asset.resize.height'
  | 'image.asset.resize.src'
  | 'image.asset.resize.width'
  | 'image.asset.size'
  | 'image.asset.spaceId'
  | 'image.asset.sys.revision'
  | 'image.asset.sys.type'
  | 'image.asset.title'
  | 'image.asset.updatedAt'
  | 'image.asset.url'
  | 'image.asset.width'
  | 'image.caption'
  | 'image.children'
  | 'image.children.children'
  | 'image.children.children.children'
  | 'image.children.children.id'
  | 'image.children.id'
  | 'image.children.internal.content'
  | 'image.children.internal.contentDigest'
  | 'image.children.internal.description'
  | 'image.children.internal.fieldOwners'
  | 'image.children.internal.ignoreType'
  | 'image.children.internal.mediaType'
  | 'image.children.internal.owner'
  | 'image.children.internal.type'
  | 'image.children.parent.children'
  | 'image.children.parent.id'
  | 'image.component'
  | 'image.component.children'
  | 'image.component.children.children'
  | 'image.component.children.id'
  | 'image.component.contentful_id'
  | 'image.component.createdAt'
  | 'image.component.date'
  | 'image.component.heading'
  | 'image.component.id'
  | 'image.component.image.altText'
  | 'image.component.image.caption'
  | 'image.component.image.children'
  | 'image.component.image.component'
  | 'image.component.image.contentful_id'
  | 'image.component.image.createdAt'
  | 'image.component.image.id'
  | 'image.component.image.node_locale'
  | 'image.component.image.spaceId'
  | 'image.component.image.updatedAt'
  | 'image.component.internal.content'
  | 'image.component.internal.contentDigest'
  | 'image.component.internal.description'
  | 'image.component.internal.fieldOwners'
  | 'image.component.internal.ignoreType'
  | 'image.component.internal.mediaType'
  | 'image.component.internal.owner'
  | 'image.component.internal.type'
  | 'image.component.label'
  | 'image.component.links'
  | 'image.component.links.children'
  | 'image.component.links.component'
  | 'image.component.links.contentful_id'
  | 'image.component.links.createdAt'
  | 'image.component.links.id'
  | 'image.component.links.label'
  | 'image.component.links.node_locale'
  | 'image.component.links.slug'
  | 'image.component.links.spaceId'
  | 'image.component.links.title'
  | 'image.component.links.updatedAt'
  | 'image.component.namedStrings'
  | 'image.component.namedStrings.children'
  | 'image.component.namedStrings.component'
  | 'image.component.namedStrings.contentful_id'
  | 'image.component.namedStrings.createdAt'
  | 'image.component.namedStrings.id'
  | 'image.component.namedStrings.name'
  | 'image.component.namedStrings.node_locale'
  | 'image.component.namedStrings.spaceId'
  | 'image.component.namedStrings.updatedAt'
  | 'image.component.namedStrings.value'
  | 'image.component.node_locale'
  | 'image.component.parent.children'
  | 'image.component.parent.id'
  | 'image.component.richText.raw'
  | 'image.component.richText.references'
  | 'image.component.section'
  | 'image.component.section.children'
  | 'image.component.section.components'
  | 'image.component.section.contentful_id'
  | 'image.component.section.createdAt'
  | 'image.component.section.heading'
  | 'image.component.section.id'
  | 'image.component.section.node_locale'
  | 'image.component.section.page'
  | 'image.component.section.slug'
  | 'image.component.section.spaceId'
  | 'image.component.section.subheading'
  | 'image.component.section.title'
  | 'image.component.section.type'
  | 'image.component.section.updatedAt'
  | 'image.component.slug'
  | 'image.component.spaceId'
  | 'image.component.subheading'
  | 'image.component.sys.revision'
  | 'image.component.sys.type'
  | 'image.component.title'
  | 'image.component.updatedAt'
  | 'image.contentful_id'
  | 'image.createdAt'
  | 'image.id'
  | 'image.internal.content'
  | 'image.internal.contentDigest'
  | 'image.internal.description'
  | 'image.internal.fieldOwners'
  | 'image.internal.ignoreType'
  | 'image.internal.mediaType'
  | 'image.internal.owner'
  | 'image.internal.type'
  | 'image.node_locale'
  | 'image.parent.children'
  | 'image.parent.children.children'
  | 'image.parent.children.id'
  | 'image.parent.id'
  | 'image.parent.internal.content'
  | 'image.parent.internal.contentDigest'
  | 'image.parent.internal.description'
  | 'image.parent.internal.fieldOwners'
  | 'image.parent.internal.ignoreType'
  | 'image.parent.internal.mediaType'
  | 'image.parent.internal.owner'
  | 'image.parent.internal.type'
  | 'image.parent.parent.children'
  | 'image.parent.parent.id'
  | 'image.spaceId'
  | 'image.sys.revision'
  | 'image.sys.type'
  | 'image.updatedAt'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'label'
  | 'links'
  | 'links.children'
  | 'links.children.children'
  | 'links.children.children.children'
  | 'links.children.children.id'
  | 'links.children.id'
  | 'links.children.internal.content'
  | 'links.children.internal.contentDigest'
  | 'links.children.internal.description'
  | 'links.children.internal.fieldOwners'
  | 'links.children.internal.ignoreType'
  | 'links.children.internal.mediaType'
  | 'links.children.internal.owner'
  | 'links.children.internal.type'
  | 'links.children.parent.children'
  | 'links.children.parent.id'
  | 'links.component'
  | 'links.component.children'
  | 'links.component.children.children'
  | 'links.component.children.id'
  | 'links.component.contentful_id'
  | 'links.component.createdAt'
  | 'links.component.date'
  | 'links.component.heading'
  | 'links.component.id'
  | 'links.component.image.altText'
  | 'links.component.image.caption'
  | 'links.component.image.children'
  | 'links.component.image.component'
  | 'links.component.image.contentful_id'
  | 'links.component.image.createdAt'
  | 'links.component.image.id'
  | 'links.component.image.node_locale'
  | 'links.component.image.spaceId'
  | 'links.component.image.updatedAt'
  | 'links.component.internal.content'
  | 'links.component.internal.contentDigest'
  | 'links.component.internal.description'
  | 'links.component.internal.fieldOwners'
  | 'links.component.internal.ignoreType'
  | 'links.component.internal.mediaType'
  | 'links.component.internal.owner'
  | 'links.component.internal.type'
  | 'links.component.label'
  | 'links.component.links'
  | 'links.component.links.children'
  | 'links.component.links.component'
  | 'links.component.links.contentful_id'
  | 'links.component.links.createdAt'
  | 'links.component.links.id'
  | 'links.component.links.label'
  | 'links.component.links.node_locale'
  | 'links.component.links.slug'
  | 'links.component.links.spaceId'
  | 'links.component.links.title'
  | 'links.component.links.updatedAt'
  | 'links.component.namedStrings'
  | 'links.component.namedStrings.children'
  | 'links.component.namedStrings.component'
  | 'links.component.namedStrings.contentful_id'
  | 'links.component.namedStrings.createdAt'
  | 'links.component.namedStrings.id'
  | 'links.component.namedStrings.name'
  | 'links.component.namedStrings.node_locale'
  | 'links.component.namedStrings.spaceId'
  | 'links.component.namedStrings.updatedAt'
  | 'links.component.namedStrings.value'
  | 'links.component.node_locale'
  | 'links.component.parent.children'
  | 'links.component.parent.id'
  | 'links.component.richText.raw'
  | 'links.component.richText.references'
  | 'links.component.section'
  | 'links.component.section.children'
  | 'links.component.section.components'
  | 'links.component.section.contentful_id'
  | 'links.component.section.createdAt'
  | 'links.component.section.heading'
  | 'links.component.section.id'
  | 'links.component.section.node_locale'
  | 'links.component.section.page'
  | 'links.component.section.slug'
  | 'links.component.section.spaceId'
  | 'links.component.section.subheading'
  | 'links.component.section.title'
  | 'links.component.section.type'
  | 'links.component.section.updatedAt'
  | 'links.component.slug'
  | 'links.component.spaceId'
  | 'links.component.subheading'
  | 'links.component.sys.revision'
  | 'links.component.sys.type'
  | 'links.component.title'
  | 'links.component.updatedAt'
  | 'links.contentful_id'
  | 'links.createdAt'
  | 'links.id'
  | 'links.internal.content'
  | 'links.internal.contentDigest'
  | 'links.internal.description'
  | 'links.internal.fieldOwners'
  | 'links.internal.ignoreType'
  | 'links.internal.mediaType'
  | 'links.internal.owner'
  | 'links.internal.type'
  | 'links.label'
  | 'links.node_locale'
  | 'links.parent.children'
  | 'links.parent.children.children'
  | 'links.parent.children.id'
  | 'links.parent.id'
  | 'links.parent.internal.content'
  | 'links.parent.internal.contentDigest'
  | 'links.parent.internal.description'
  | 'links.parent.internal.fieldOwners'
  | 'links.parent.internal.ignoreType'
  | 'links.parent.internal.mediaType'
  | 'links.parent.internal.owner'
  | 'links.parent.internal.type'
  | 'links.parent.parent.children'
  | 'links.parent.parent.id'
  | 'links.ref.children'
  | 'links.ref.children.children'
  | 'links.ref.children.id'
  | 'links.ref.contentful_id'
  | 'links.ref.createdAt'
  | 'links.ref.gatsbyPath'
  | 'links.ref.heading'
  | 'links.ref.id'
  | 'links.ref.internal.content'
  | 'links.ref.internal.contentDigest'
  | 'links.ref.internal.description'
  | 'links.ref.internal.fieldOwners'
  | 'links.ref.internal.ignoreType'
  | 'links.ref.internal.mediaType'
  | 'links.ref.internal.owner'
  | 'links.ref.internal.type'
  | 'links.ref.link'
  | 'links.ref.link.children'
  | 'links.ref.link.component'
  | 'links.ref.link.contentful_id'
  | 'links.ref.link.createdAt'
  | 'links.ref.link.id'
  | 'links.ref.link.label'
  | 'links.ref.link.node_locale'
  | 'links.ref.link.slug'
  | 'links.ref.link.spaceId'
  | 'links.ref.link.title'
  | 'links.ref.link.updatedAt'
  | 'links.ref.node_locale'
  | 'links.ref.parent.children'
  | 'links.ref.parent.id'
  | 'links.ref.sections'
  | 'links.ref.sections.children'
  | 'links.ref.sections.components'
  | 'links.ref.sections.contentful_id'
  | 'links.ref.sections.createdAt'
  | 'links.ref.sections.heading'
  | 'links.ref.sections.id'
  | 'links.ref.sections.node_locale'
  | 'links.ref.sections.page'
  | 'links.ref.sections.slug'
  | 'links.ref.sections.spaceId'
  | 'links.ref.sections.subheading'
  | 'links.ref.sections.title'
  | 'links.ref.sections.type'
  | 'links.ref.sections.updatedAt'
  | 'links.ref.slug'
  | 'links.ref.spaceId'
  | 'links.ref.subheading'
  | 'links.ref.sys.revision'
  | 'links.ref.sys.type'
  | 'links.ref.title'
  | 'links.ref.updatedAt'
  | 'links.slug'
  | 'links.spaceId'
  | 'links.sys.revision'
  | 'links.sys.type'
  | 'links.title'
  | 'links.updatedAt'
  | 'namedStrings'
  | 'namedStrings.children'
  | 'namedStrings.children.children'
  | 'namedStrings.children.children.children'
  | 'namedStrings.children.children.id'
  | 'namedStrings.children.id'
  | 'namedStrings.children.internal.content'
  | 'namedStrings.children.internal.contentDigest'
  | 'namedStrings.children.internal.description'
  | 'namedStrings.children.internal.fieldOwners'
  | 'namedStrings.children.internal.ignoreType'
  | 'namedStrings.children.internal.mediaType'
  | 'namedStrings.children.internal.owner'
  | 'namedStrings.children.internal.type'
  | 'namedStrings.children.parent.children'
  | 'namedStrings.children.parent.id'
  | 'namedStrings.component'
  | 'namedStrings.component.children'
  | 'namedStrings.component.children.children'
  | 'namedStrings.component.children.id'
  | 'namedStrings.component.contentful_id'
  | 'namedStrings.component.createdAt'
  | 'namedStrings.component.date'
  | 'namedStrings.component.heading'
  | 'namedStrings.component.id'
  | 'namedStrings.component.image.altText'
  | 'namedStrings.component.image.caption'
  | 'namedStrings.component.image.children'
  | 'namedStrings.component.image.component'
  | 'namedStrings.component.image.contentful_id'
  | 'namedStrings.component.image.createdAt'
  | 'namedStrings.component.image.id'
  | 'namedStrings.component.image.node_locale'
  | 'namedStrings.component.image.spaceId'
  | 'namedStrings.component.image.updatedAt'
  | 'namedStrings.component.internal.content'
  | 'namedStrings.component.internal.contentDigest'
  | 'namedStrings.component.internal.description'
  | 'namedStrings.component.internal.fieldOwners'
  | 'namedStrings.component.internal.ignoreType'
  | 'namedStrings.component.internal.mediaType'
  | 'namedStrings.component.internal.owner'
  | 'namedStrings.component.internal.type'
  | 'namedStrings.component.label'
  | 'namedStrings.component.links'
  | 'namedStrings.component.links.children'
  | 'namedStrings.component.links.component'
  | 'namedStrings.component.links.contentful_id'
  | 'namedStrings.component.links.createdAt'
  | 'namedStrings.component.links.id'
  | 'namedStrings.component.links.label'
  | 'namedStrings.component.links.node_locale'
  | 'namedStrings.component.links.slug'
  | 'namedStrings.component.links.spaceId'
  | 'namedStrings.component.links.title'
  | 'namedStrings.component.links.updatedAt'
  | 'namedStrings.component.namedStrings'
  | 'namedStrings.component.namedStrings.children'
  | 'namedStrings.component.namedStrings.component'
  | 'namedStrings.component.namedStrings.contentful_id'
  | 'namedStrings.component.namedStrings.createdAt'
  | 'namedStrings.component.namedStrings.id'
  | 'namedStrings.component.namedStrings.name'
  | 'namedStrings.component.namedStrings.node_locale'
  | 'namedStrings.component.namedStrings.spaceId'
  | 'namedStrings.component.namedStrings.updatedAt'
  | 'namedStrings.component.namedStrings.value'
  | 'namedStrings.component.node_locale'
  | 'namedStrings.component.parent.children'
  | 'namedStrings.component.parent.id'
  | 'namedStrings.component.richText.raw'
  | 'namedStrings.component.richText.references'
  | 'namedStrings.component.section'
  | 'namedStrings.component.section.children'
  | 'namedStrings.component.section.components'
  | 'namedStrings.component.section.contentful_id'
  | 'namedStrings.component.section.createdAt'
  | 'namedStrings.component.section.heading'
  | 'namedStrings.component.section.id'
  | 'namedStrings.component.section.node_locale'
  | 'namedStrings.component.section.page'
  | 'namedStrings.component.section.slug'
  | 'namedStrings.component.section.spaceId'
  | 'namedStrings.component.section.subheading'
  | 'namedStrings.component.section.title'
  | 'namedStrings.component.section.type'
  | 'namedStrings.component.section.updatedAt'
  | 'namedStrings.component.slug'
  | 'namedStrings.component.spaceId'
  | 'namedStrings.component.subheading'
  | 'namedStrings.component.sys.revision'
  | 'namedStrings.component.sys.type'
  | 'namedStrings.component.title'
  | 'namedStrings.component.updatedAt'
  | 'namedStrings.contentful_id'
  | 'namedStrings.createdAt'
  | 'namedStrings.id'
  | 'namedStrings.internal.content'
  | 'namedStrings.internal.contentDigest'
  | 'namedStrings.internal.description'
  | 'namedStrings.internal.fieldOwners'
  | 'namedStrings.internal.ignoreType'
  | 'namedStrings.internal.mediaType'
  | 'namedStrings.internal.owner'
  | 'namedStrings.internal.type'
  | 'namedStrings.name'
  | 'namedStrings.node_locale'
  | 'namedStrings.parent.children'
  | 'namedStrings.parent.children.children'
  | 'namedStrings.parent.children.id'
  | 'namedStrings.parent.id'
  | 'namedStrings.parent.internal.content'
  | 'namedStrings.parent.internal.contentDigest'
  | 'namedStrings.parent.internal.description'
  | 'namedStrings.parent.internal.fieldOwners'
  | 'namedStrings.parent.internal.ignoreType'
  | 'namedStrings.parent.internal.mediaType'
  | 'namedStrings.parent.internal.owner'
  | 'namedStrings.parent.internal.type'
  | 'namedStrings.parent.parent.children'
  | 'namedStrings.parent.parent.id'
  | 'namedStrings.spaceId'
  | 'namedStrings.sys.revision'
  | 'namedStrings.sys.type'
  | 'namedStrings.updatedAt'
  | 'namedStrings.value'
  | 'node_locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'richText.raw'
  | 'richText.references'
  | 'richText.references.children'
  | 'richText.references.children.children'
  | 'richText.references.children.id'
  | 'richText.references.contentful_id'
  | 'richText.references.createdAt'
  | 'richText.references.gatsbyPath'
  | 'richText.references.heading'
  | 'richText.references.id'
  | 'richText.references.internal.content'
  | 'richText.references.internal.contentDigest'
  | 'richText.references.internal.description'
  | 'richText.references.internal.fieldOwners'
  | 'richText.references.internal.ignoreType'
  | 'richText.references.internal.mediaType'
  | 'richText.references.internal.owner'
  | 'richText.references.internal.type'
  | 'richText.references.link'
  | 'richText.references.link.children'
  | 'richText.references.link.component'
  | 'richText.references.link.contentful_id'
  | 'richText.references.link.createdAt'
  | 'richText.references.link.id'
  | 'richText.references.link.label'
  | 'richText.references.link.node_locale'
  | 'richText.references.link.slug'
  | 'richText.references.link.spaceId'
  | 'richText.references.link.title'
  | 'richText.references.link.updatedAt'
  | 'richText.references.node_locale'
  | 'richText.references.parent.children'
  | 'richText.references.parent.id'
  | 'richText.references.sections'
  | 'richText.references.sections.children'
  | 'richText.references.sections.components'
  | 'richText.references.sections.contentful_id'
  | 'richText.references.sections.createdAt'
  | 'richText.references.sections.heading'
  | 'richText.references.sections.id'
  | 'richText.references.sections.node_locale'
  | 'richText.references.sections.page'
  | 'richText.references.sections.slug'
  | 'richText.references.sections.spaceId'
  | 'richText.references.sections.subheading'
  | 'richText.references.sections.title'
  | 'richText.references.sections.type'
  | 'richText.references.sections.updatedAt'
  | 'richText.references.slug'
  | 'richText.references.spaceId'
  | 'richText.references.subheading'
  | 'richText.references.sys.revision'
  | 'richText.references.sys.type'
  | 'richText.references.title'
  | 'richText.references.updatedAt'
  | 'section'
  | 'section.children'
  | 'section.children.children'
  | 'section.children.children.children'
  | 'section.children.children.id'
  | 'section.children.id'
  | 'section.children.internal.content'
  | 'section.children.internal.contentDigest'
  | 'section.children.internal.description'
  | 'section.children.internal.fieldOwners'
  | 'section.children.internal.ignoreType'
  | 'section.children.internal.mediaType'
  | 'section.children.internal.owner'
  | 'section.children.internal.type'
  | 'section.children.parent.children'
  | 'section.children.parent.id'
  | 'section.components'
  | 'section.components.children'
  | 'section.components.children.children'
  | 'section.components.children.id'
  | 'section.components.contentful_id'
  | 'section.components.createdAt'
  | 'section.components.date'
  | 'section.components.heading'
  | 'section.components.id'
  | 'section.components.image.altText'
  | 'section.components.image.caption'
  | 'section.components.image.children'
  | 'section.components.image.component'
  | 'section.components.image.contentful_id'
  | 'section.components.image.createdAt'
  | 'section.components.image.id'
  | 'section.components.image.node_locale'
  | 'section.components.image.spaceId'
  | 'section.components.image.updatedAt'
  | 'section.components.internal.content'
  | 'section.components.internal.contentDigest'
  | 'section.components.internal.description'
  | 'section.components.internal.fieldOwners'
  | 'section.components.internal.ignoreType'
  | 'section.components.internal.mediaType'
  | 'section.components.internal.owner'
  | 'section.components.internal.type'
  | 'section.components.label'
  | 'section.components.links'
  | 'section.components.links.children'
  | 'section.components.links.component'
  | 'section.components.links.contentful_id'
  | 'section.components.links.createdAt'
  | 'section.components.links.id'
  | 'section.components.links.label'
  | 'section.components.links.node_locale'
  | 'section.components.links.slug'
  | 'section.components.links.spaceId'
  | 'section.components.links.title'
  | 'section.components.links.updatedAt'
  | 'section.components.namedStrings'
  | 'section.components.namedStrings.children'
  | 'section.components.namedStrings.component'
  | 'section.components.namedStrings.contentful_id'
  | 'section.components.namedStrings.createdAt'
  | 'section.components.namedStrings.id'
  | 'section.components.namedStrings.name'
  | 'section.components.namedStrings.node_locale'
  | 'section.components.namedStrings.spaceId'
  | 'section.components.namedStrings.updatedAt'
  | 'section.components.namedStrings.value'
  | 'section.components.node_locale'
  | 'section.components.parent.children'
  | 'section.components.parent.id'
  | 'section.components.richText.raw'
  | 'section.components.richText.references'
  | 'section.components.section'
  | 'section.components.section.children'
  | 'section.components.section.components'
  | 'section.components.section.contentful_id'
  | 'section.components.section.createdAt'
  | 'section.components.section.heading'
  | 'section.components.section.id'
  | 'section.components.section.node_locale'
  | 'section.components.section.page'
  | 'section.components.section.slug'
  | 'section.components.section.spaceId'
  | 'section.components.section.subheading'
  | 'section.components.section.title'
  | 'section.components.section.type'
  | 'section.components.section.updatedAt'
  | 'section.components.slug'
  | 'section.components.spaceId'
  | 'section.components.subheading'
  | 'section.components.sys.revision'
  | 'section.components.sys.type'
  | 'section.components.title'
  | 'section.components.updatedAt'
  | 'section.contentful_id'
  | 'section.createdAt'
  | 'section.heading'
  | 'section.id'
  | 'section.internal.content'
  | 'section.internal.contentDigest'
  | 'section.internal.description'
  | 'section.internal.fieldOwners'
  | 'section.internal.ignoreType'
  | 'section.internal.mediaType'
  | 'section.internal.owner'
  | 'section.internal.type'
  | 'section.node_locale'
  | 'section.page'
  | 'section.page.children'
  | 'section.page.children.children'
  | 'section.page.children.id'
  | 'section.page.contentful_id'
  | 'section.page.createdAt'
  | 'section.page.gatsbyPath'
  | 'section.page.heading'
  | 'section.page.id'
  | 'section.page.internal.content'
  | 'section.page.internal.contentDigest'
  | 'section.page.internal.description'
  | 'section.page.internal.fieldOwners'
  | 'section.page.internal.ignoreType'
  | 'section.page.internal.mediaType'
  | 'section.page.internal.owner'
  | 'section.page.internal.type'
  | 'section.page.link'
  | 'section.page.link.children'
  | 'section.page.link.component'
  | 'section.page.link.contentful_id'
  | 'section.page.link.createdAt'
  | 'section.page.link.id'
  | 'section.page.link.label'
  | 'section.page.link.node_locale'
  | 'section.page.link.slug'
  | 'section.page.link.spaceId'
  | 'section.page.link.title'
  | 'section.page.link.updatedAt'
  | 'section.page.node_locale'
  | 'section.page.parent.children'
  | 'section.page.parent.id'
  | 'section.page.sections'
  | 'section.page.sections.children'
  | 'section.page.sections.components'
  | 'section.page.sections.contentful_id'
  | 'section.page.sections.createdAt'
  | 'section.page.sections.heading'
  | 'section.page.sections.id'
  | 'section.page.sections.node_locale'
  | 'section.page.sections.page'
  | 'section.page.sections.slug'
  | 'section.page.sections.spaceId'
  | 'section.page.sections.subheading'
  | 'section.page.sections.title'
  | 'section.page.sections.type'
  | 'section.page.sections.updatedAt'
  | 'section.page.slug'
  | 'section.page.spaceId'
  | 'section.page.subheading'
  | 'section.page.sys.revision'
  | 'section.page.sys.type'
  | 'section.page.title'
  | 'section.page.updatedAt'
  | 'section.parent.children'
  | 'section.parent.children.children'
  | 'section.parent.children.id'
  | 'section.parent.id'
  | 'section.parent.internal.content'
  | 'section.parent.internal.contentDigest'
  | 'section.parent.internal.description'
  | 'section.parent.internal.fieldOwners'
  | 'section.parent.internal.ignoreType'
  | 'section.parent.internal.mediaType'
  | 'section.parent.internal.owner'
  | 'section.parent.internal.type'
  | 'section.parent.parent.children'
  | 'section.parent.parent.id'
  | 'section.slug'
  | 'section.spaceId'
  | 'section.subheading'
  | 'section.sys.revision'
  | 'section.sys.type'
  | 'section.title'
  | 'section.type'
  | 'section.updatedAt'
  | 'slug'
  | 'spaceId'
  | 'subheading'
  | 'sys.contentType.sys.id'
  | 'sys.contentType.sys.linkType'
  | 'sys.contentType.sys.type'
  | 'sys.revision'
  | 'sys.type'
  | 'title'
  | 'updatedAt';

type ContentfulComponentFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly date: InputMaybe<DateQueryOperatorInput>;
  readonly heading: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly image: InputMaybe<ContentfulImageFilterInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly label: InputMaybe<StringQueryOperatorInput>;
  readonly links: InputMaybe<ContentfulLinkFilterListInput>;
  readonly namedStrings: InputMaybe<ContentfulNameValuePairFilterListInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly richText: InputMaybe<ContentfulComponentRichTextFilterInput>;
  readonly section: InputMaybe<ContentfulSectionFilterListInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly subheading: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulComponentSysFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type ContentfulComponentFilterListInput = {
  readonly elemMatch: InputMaybe<ContentfulComponentFilterInput>;
};

type ContentfulComponentGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulComponentEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulComponentGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulComponent>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulComponentGroupConnection_distinctArgs = {
  field: ContentfulComponentFieldsEnum;
};


type ContentfulComponentGroupConnection_groupArgs = {
  field: ContentfulComponentFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulComponentGroupConnection_maxArgs = {
  field: ContentfulComponentFieldsEnum;
};


type ContentfulComponentGroupConnection_minArgs = {
  field: ContentfulComponentFieldsEnum;
};


type ContentfulComponentGroupConnection_sumArgs = {
  field: ContentfulComponentFieldsEnum;
};

type ContentfulComponentRichText = {
  readonly raw: Maybe<Scalars['String']>;
  readonly references: Maybe<ReadonlyArray<Maybe<ContentfulPage>>>;
};

type ContentfulComponentRichTextFilterInput = {
  readonly raw: InputMaybe<StringQueryOperatorInput>;
  readonly references: InputMaybe<ContentfulPageFilterListInput>;
};

type ContentfulComponentSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ContentfulComponentFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ContentfulComponentSys = {
  readonly contentType: Maybe<ContentfulComponentSysContentType>;
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulComponentSysContentType = {
  readonly sys: Maybe<ContentfulComponentSysContentTypeSys>;
};

type ContentfulComponentSysContentTypeFilterInput = {
  readonly sys: InputMaybe<ContentfulComponentSysContentTypeSysFilterInput>;
};

type ContentfulComponentSysContentTypeSys = {
  readonly id: Maybe<Scalars['String']>;
  readonly linkType: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulComponentSysContentTypeSysFilterInput = {
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly linkType: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulComponentSysFilterInput = {
  readonly contentType: InputMaybe<ContentfulComponentSysContentTypeFilterInput>;
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulContentType = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly description: Maybe<Scalars['String']>;
  readonly displayField: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly sys: Maybe<ContentfulContentTypeSys>;
};

type ContentfulContentTypeConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulContentTypeEdge>;
  readonly group: ReadonlyArray<ContentfulContentTypeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulContentType>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulContentTypeConnection_distinctArgs = {
  field: ContentfulContentTypeFieldsEnum;
};


type ContentfulContentTypeConnection_groupArgs = {
  field: ContentfulContentTypeFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulContentTypeConnection_maxArgs = {
  field: ContentfulContentTypeFieldsEnum;
};


type ContentfulContentTypeConnection_minArgs = {
  field: ContentfulContentTypeFieldsEnum;
};


type ContentfulContentTypeConnection_sumArgs = {
  field: ContentfulContentTypeFieldsEnum;
};

type ContentfulContentTypeEdge = {
  readonly next: Maybe<ContentfulContentType>;
  readonly node: ContentfulContentType;
  readonly previous: Maybe<ContentfulContentType>;
};

type ContentfulContentTypeFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'description'
  | 'displayField'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'name'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'sys.type';

type ContentfulContentTypeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly displayField: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sys: InputMaybe<ContentfulContentTypeSysFilterInput>;
};

type ContentfulContentTypeGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulContentTypeEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulContentTypeGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulContentType>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulContentTypeGroupConnection_distinctArgs = {
  field: ContentfulContentTypeFieldsEnum;
};


type ContentfulContentTypeGroupConnection_groupArgs = {
  field: ContentfulContentTypeFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulContentTypeGroupConnection_maxArgs = {
  field: ContentfulContentTypeFieldsEnum;
};


type ContentfulContentTypeGroupConnection_minArgs = {
  field: ContentfulContentTypeFieldsEnum;
};


type ContentfulContentTypeGroupConnection_sumArgs = {
  field: ContentfulContentTypeFieldsEnum;
};

type ContentfulContentTypeSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ContentfulContentTypeFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ContentfulContentTypeSys = {
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulContentTypeSysFilterInput = {
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulEntry = {
  readonly children: ReadonlyArray<Node>;
  readonly contentful_id: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
};

type ContentfulEntryConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulEntryEdge>;
  readonly group: ReadonlyArray<ContentfulEntryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulEntry>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulEntryConnection_distinctArgs = {
  field: ContentfulEntryFieldsEnum;
};


type ContentfulEntryConnection_groupArgs = {
  field: ContentfulEntryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulEntryConnection_maxArgs = {
  field: ContentfulEntryFieldsEnum;
};


type ContentfulEntryConnection_minArgs = {
  field: ContentfulEntryFieldsEnum;
};


type ContentfulEntryConnection_sumArgs = {
  field: ContentfulEntryFieldsEnum;
};

type ContentfulEntryEdge = {
  readonly next: Maybe<ContentfulEntry>;
  readonly node: ContentfulEntry;
  readonly previous: Maybe<ContentfulEntry>;
};

type ContentfulEntryFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'contentful_id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'node_locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type ContentfulEntryFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type ContentfulEntryGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulEntryEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulEntryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulEntry>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulEntryGroupConnection_distinctArgs = {
  field: ContentfulEntryFieldsEnum;
};


type ContentfulEntryGroupConnection_groupArgs = {
  field: ContentfulEntryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulEntryGroupConnection_maxArgs = {
  field: ContentfulEntryFieldsEnum;
};


type ContentfulEntryGroupConnection_minArgs = {
  field: ContentfulEntryFieldsEnum;
};


type ContentfulEntryGroupConnection_sumArgs = {
  field: ContentfulEntryFieldsEnum;
};

type ContentfulEntrySortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ContentfulEntryFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ContentfulHero = ContentfulEntry & ContentfulReference & Node & {
  readonly children: ReadonlyArray<Node>;
  readonly contentful_id: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
};

type ContentfulHeroConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulHeroEdge>;
  readonly group: ReadonlyArray<ContentfulHeroGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulHero>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulHeroConnection_distinctArgs = {
  field: ContentfulHeroFieldsEnum;
};


type ContentfulHeroConnection_groupArgs = {
  field: ContentfulHeroFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulHeroConnection_maxArgs = {
  field: ContentfulHeroFieldsEnum;
};


type ContentfulHeroConnection_minArgs = {
  field: ContentfulHeroFieldsEnum;
};


type ContentfulHeroConnection_sumArgs = {
  field: ContentfulHeroFieldsEnum;
};

type ContentfulHeroEdge = {
  readonly next: Maybe<ContentfulHero>;
  readonly node: ContentfulHero;
  readonly previous: Maybe<ContentfulHero>;
};

type ContentfulHeroFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'contentful_id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'node_locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type ContentfulHeroFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type ContentfulHeroGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulHeroEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulHeroGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulHero>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulHeroGroupConnection_distinctArgs = {
  field: ContentfulHeroFieldsEnum;
};


type ContentfulHeroGroupConnection_groupArgs = {
  field: ContentfulHeroFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulHeroGroupConnection_maxArgs = {
  field: ContentfulHeroFieldsEnum;
};


type ContentfulHeroGroupConnection_minArgs = {
  field: ContentfulHeroFieldsEnum;
};


type ContentfulHeroGroupConnection_sumArgs = {
  field: ContentfulHeroFieldsEnum;
};

type ContentfulHeroSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ContentfulHeroFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ContentfulImage = ContentfulEntry & ContentfulReference & Node & {
  readonly altText: Maybe<Scalars['String']>;
  readonly asset: Maybe<ContentfulAsset>;
  readonly caption: Maybe<Scalars['String']>;
  readonly children: ReadonlyArray<Node>;
  readonly component: Maybe<ReadonlyArray<Maybe<ContentfulComponent>>>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulImageSys>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type ContentfulImage_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulImage_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulImageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulImageEdge>;
  readonly group: ReadonlyArray<ContentfulImageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulImage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulImageConnection_distinctArgs = {
  field: ContentfulImageFieldsEnum;
};


type ContentfulImageConnection_groupArgs = {
  field: ContentfulImageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulImageConnection_maxArgs = {
  field: ContentfulImageFieldsEnum;
};


type ContentfulImageConnection_minArgs = {
  field: ContentfulImageFieldsEnum;
};


type ContentfulImageConnection_sumArgs = {
  field: ContentfulImageFieldsEnum;
};

type ContentfulImageCropFocus =
  | 'bottom'
  | 'bottom_right'
  | 'bottom_left'
  | 'center'
  | 'face'
  | 'faces'
  | 'left'
  | 'right'
  | 'top'
  | 'top_left'
  | 'top_right';

type ContentfulImageEdge = {
  readonly next: Maybe<ContentfulImage>;
  readonly node: ContentfulImage;
  readonly previous: Maybe<ContentfulImage>;
};

type ContentfulImageFieldsEnum =
  | 'altText'
  | 'asset.children'
  | 'asset.children.children'
  | 'asset.children.children.children'
  | 'asset.children.children.id'
  | 'asset.children.id'
  | 'asset.children.internal.content'
  | 'asset.children.internal.contentDigest'
  | 'asset.children.internal.description'
  | 'asset.children.internal.fieldOwners'
  | 'asset.children.internal.ignoreType'
  | 'asset.children.internal.mediaType'
  | 'asset.children.internal.owner'
  | 'asset.children.internal.type'
  | 'asset.children.parent.children'
  | 'asset.children.parent.id'
  | 'asset.contentful_id'
  | 'asset.createdAt'
  | 'asset.description'
  | 'asset.file.contentType'
  | 'asset.file.details.size'
  | 'asset.file.fileName'
  | 'asset.file.url'
  | 'asset.filename'
  | 'asset.filesize'
  | 'asset.gatsbyImage'
  | 'asset.gatsbyImageData'
  | 'asset.height'
  | 'asset.id'
  | 'asset.internal.content'
  | 'asset.internal.contentDigest'
  | 'asset.internal.description'
  | 'asset.internal.fieldOwners'
  | 'asset.internal.ignoreType'
  | 'asset.internal.mediaType'
  | 'asset.internal.owner'
  | 'asset.internal.type'
  | 'asset.mimeType'
  | 'asset.node_locale'
  | 'asset.parent.children'
  | 'asset.parent.children.children'
  | 'asset.parent.children.id'
  | 'asset.parent.id'
  | 'asset.parent.internal.content'
  | 'asset.parent.internal.contentDigest'
  | 'asset.parent.internal.description'
  | 'asset.parent.internal.fieldOwners'
  | 'asset.parent.internal.ignoreType'
  | 'asset.parent.internal.mediaType'
  | 'asset.parent.internal.owner'
  | 'asset.parent.internal.type'
  | 'asset.parent.parent.children'
  | 'asset.parent.parent.id'
  | 'asset.placeholderUrl'
  | 'asset.publicUrl'
  | 'asset.resize.height'
  | 'asset.resize.src'
  | 'asset.resize.width'
  | 'asset.size'
  | 'asset.spaceId'
  | 'asset.sys.revision'
  | 'asset.sys.type'
  | 'asset.title'
  | 'asset.updatedAt'
  | 'asset.url'
  | 'asset.width'
  | 'caption'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'component'
  | 'component.children'
  | 'component.children.children'
  | 'component.children.children.children'
  | 'component.children.children.id'
  | 'component.children.id'
  | 'component.children.internal.content'
  | 'component.children.internal.contentDigest'
  | 'component.children.internal.description'
  | 'component.children.internal.fieldOwners'
  | 'component.children.internal.ignoreType'
  | 'component.children.internal.mediaType'
  | 'component.children.internal.owner'
  | 'component.children.internal.type'
  | 'component.children.parent.children'
  | 'component.children.parent.id'
  | 'component.contentful_id'
  | 'component.createdAt'
  | 'component.date'
  | 'component.heading'
  | 'component.id'
  | 'component.image.altText'
  | 'component.image.asset.children'
  | 'component.image.asset.contentful_id'
  | 'component.image.asset.createdAt'
  | 'component.image.asset.description'
  | 'component.image.asset.filename'
  | 'component.image.asset.filesize'
  | 'component.image.asset.gatsbyImage'
  | 'component.image.asset.gatsbyImageData'
  | 'component.image.asset.height'
  | 'component.image.asset.id'
  | 'component.image.asset.mimeType'
  | 'component.image.asset.node_locale'
  | 'component.image.asset.placeholderUrl'
  | 'component.image.asset.publicUrl'
  | 'component.image.asset.size'
  | 'component.image.asset.spaceId'
  | 'component.image.asset.title'
  | 'component.image.asset.updatedAt'
  | 'component.image.asset.url'
  | 'component.image.asset.width'
  | 'component.image.caption'
  | 'component.image.children'
  | 'component.image.children.children'
  | 'component.image.children.id'
  | 'component.image.component'
  | 'component.image.component.children'
  | 'component.image.component.contentful_id'
  | 'component.image.component.createdAt'
  | 'component.image.component.date'
  | 'component.image.component.heading'
  | 'component.image.component.id'
  | 'component.image.component.label'
  | 'component.image.component.links'
  | 'component.image.component.namedStrings'
  | 'component.image.component.node_locale'
  | 'component.image.component.section'
  | 'component.image.component.slug'
  | 'component.image.component.spaceId'
  | 'component.image.component.subheading'
  | 'component.image.component.title'
  | 'component.image.component.updatedAt'
  | 'component.image.contentful_id'
  | 'component.image.createdAt'
  | 'component.image.id'
  | 'component.image.internal.content'
  | 'component.image.internal.contentDigest'
  | 'component.image.internal.description'
  | 'component.image.internal.fieldOwners'
  | 'component.image.internal.ignoreType'
  | 'component.image.internal.mediaType'
  | 'component.image.internal.owner'
  | 'component.image.internal.type'
  | 'component.image.node_locale'
  | 'component.image.parent.children'
  | 'component.image.parent.id'
  | 'component.image.spaceId'
  | 'component.image.sys.revision'
  | 'component.image.sys.type'
  | 'component.image.updatedAt'
  | 'component.internal.content'
  | 'component.internal.contentDigest'
  | 'component.internal.description'
  | 'component.internal.fieldOwners'
  | 'component.internal.ignoreType'
  | 'component.internal.mediaType'
  | 'component.internal.owner'
  | 'component.internal.type'
  | 'component.label'
  | 'component.links'
  | 'component.links.children'
  | 'component.links.children.children'
  | 'component.links.children.id'
  | 'component.links.component'
  | 'component.links.component.children'
  | 'component.links.component.contentful_id'
  | 'component.links.component.createdAt'
  | 'component.links.component.date'
  | 'component.links.component.heading'
  | 'component.links.component.id'
  | 'component.links.component.label'
  | 'component.links.component.links'
  | 'component.links.component.namedStrings'
  | 'component.links.component.node_locale'
  | 'component.links.component.section'
  | 'component.links.component.slug'
  | 'component.links.component.spaceId'
  | 'component.links.component.subheading'
  | 'component.links.component.title'
  | 'component.links.component.updatedAt'
  | 'component.links.contentful_id'
  | 'component.links.createdAt'
  | 'component.links.id'
  | 'component.links.internal.content'
  | 'component.links.internal.contentDigest'
  | 'component.links.internal.description'
  | 'component.links.internal.fieldOwners'
  | 'component.links.internal.ignoreType'
  | 'component.links.internal.mediaType'
  | 'component.links.internal.owner'
  | 'component.links.internal.type'
  | 'component.links.label'
  | 'component.links.node_locale'
  | 'component.links.parent.children'
  | 'component.links.parent.id'
  | 'component.links.ref.children'
  | 'component.links.ref.contentful_id'
  | 'component.links.ref.createdAt'
  | 'component.links.ref.gatsbyPath'
  | 'component.links.ref.heading'
  | 'component.links.ref.id'
  | 'component.links.ref.link'
  | 'component.links.ref.node_locale'
  | 'component.links.ref.sections'
  | 'component.links.ref.slug'
  | 'component.links.ref.spaceId'
  | 'component.links.ref.subheading'
  | 'component.links.ref.title'
  | 'component.links.ref.updatedAt'
  | 'component.links.slug'
  | 'component.links.spaceId'
  | 'component.links.sys.revision'
  | 'component.links.sys.type'
  | 'component.links.title'
  | 'component.links.updatedAt'
  | 'component.namedStrings'
  | 'component.namedStrings.children'
  | 'component.namedStrings.children.children'
  | 'component.namedStrings.children.id'
  | 'component.namedStrings.component'
  | 'component.namedStrings.component.children'
  | 'component.namedStrings.component.contentful_id'
  | 'component.namedStrings.component.createdAt'
  | 'component.namedStrings.component.date'
  | 'component.namedStrings.component.heading'
  | 'component.namedStrings.component.id'
  | 'component.namedStrings.component.label'
  | 'component.namedStrings.component.links'
  | 'component.namedStrings.component.namedStrings'
  | 'component.namedStrings.component.node_locale'
  | 'component.namedStrings.component.section'
  | 'component.namedStrings.component.slug'
  | 'component.namedStrings.component.spaceId'
  | 'component.namedStrings.component.subheading'
  | 'component.namedStrings.component.title'
  | 'component.namedStrings.component.updatedAt'
  | 'component.namedStrings.contentful_id'
  | 'component.namedStrings.createdAt'
  | 'component.namedStrings.id'
  | 'component.namedStrings.internal.content'
  | 'component.namedStrings.internal.contentDigest'
  | 'component.namedStrings.internal.description'
  | 'component.namedStrings.internal.fieldOwners'
  | 'component.namedStrings.internal.ignoreType'
  | 'component.namedStrings.internal.mediaType'
  | 'component.namedStrings.internal.owner'
  | 'component.namedStrings.internal.type'
  | 'component.namedStrings.name'
  | 'component.namedStrings.node_locale'
  | 'component.namedStrings.parent.children'
  | 'component.namedStrings.parent.id'
  | 'component.namedStrings.spaceId'
  | 'component.namedStrings.sys.revision'
  | 'component.namedStrings.sys.type'
  | 'component.namedStrings.updatedAt'
  | 'component.namedStrings.value'
  | 'component.node_locale'
  | 'component.parent.children'
  | 'component.parent.children.children'
  | 'component.parent.children.id'
  | 'component.parent.id'
  | 'component.parent.internal.content'
  | 'component.parent.internal.contentDigest'
  | 'component.parent.internal.description'
  | 'component.parent.internal.fieldOwners'
  | 'component.parent.internal.ignoreType'
  | 'component.parent.internal.mediaType'
  | 'component.parent.internal.owner'
  | 'component.parent.internal.type'
  | 'component.parent.parent.children'
  | 'component.parent.parent.id'
  | 'component.richText.raw'
  | 'component.richText.references'
  | 'component.richText.references.children'
  | 'component.richText.references.contentful_id'
  | 'component.richText.references.createdAt'
  | 'component.richText.references.gatsbyPath'
  | 'component.richText.references.heading'
  | 'component.richText.references.id'
  | 'component.richText.references.link'
  | 'component.richText.references.node_locale'
  | 'component.richText.references.sections'
  | 'component.richText.references.slug'
  | 'component.richText.references.spaceId'
  | 'component.richText.references.subheading'
  | 'component.richText.references.title'
  | 'component.richText.references.updatedAt'
  | 'component.section'
  | 'component.section.children'
  | 'component.section.children.children'
  | 'component.section.children.id'
  | 'component.section.components'
  | 'component.section.components.children'
  | 'component.section.components.contentful_id'
  | 'component.section.components.createdAt'
  | 'component.section.components.date'
  | 'component.section.components.heading'
  | 'component.section.components.id'
  | 'component.section.components.label'
  | 'component.section.components.links'
  | 'component.section.components.namedStrings'
  | 'component.section.components.node_locale'
  | 'component.section.components.section'
  | 'component.section.components.slug'
  | 'component.section.components.spaceId'
  | 'component.section.components.subheading'
  | 'component.section.components.title'
  | 'component.section.components.updatedAt'
  | 'component.section.contentful_id'
  | 'component.section.createdAt'
  | 'component.section.heading'
  | 'component.section.id'
  | 'component.section.internal.content'
  | 'component.section.internal.contentDigest'
  | 'component.section.internal.description'
  | 'component.section.internal.fieldOwners'
  | 'component.section.internal.ignoreType'
  | 'component.section.internal.mediaType'
  | 'component.section.internal.owner'
  | 'component.section.internal.type'
  | 'component.section.node_locale'
  | 'component.section.page'
  | 'component.section.page.children'
  | 'component.section.page.contentful_id'
  | 'component.section.page.createdAt'
  | 'component.section.page.gatsbyPath'
  | 'component.section.page.heading'
  | 'component.section.page.id'
  | 'component.section.page.link'
  | 'component.section.page.node_locale'
  | 'component.section.page.sections'
  | 'component.section.page.slug'
  | 'component.section.page.spaceId'
  | 'component.section.page.subheading'
  | 'component.section.page.title'
  | 'component.section.page.updatedAt'
  | 'component.section.parent.children'
  | 'component.section.parent.id'
  | 'component.section.slug'
  | 'component.section.spaceId'
  | 'component.section.subheading'
  | 'component.section.sys.revision'
  | 'component.section.sys.type'
  | 'component.section.title'
  | 'component.section.type'
  | 'component.section.updatedAt'
  | 'component.slug'
  | 'component.spaceId'
  | 'component.subheading'
  | 'component.sys.revision'
  | 'component.sys.type'
  | 'component.title'
  | 'component.updatedAt'
  | 'contentful_id'
  | 'createdAt'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'node_locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'spaceId'
  | 'sys.contentType.sys.id'
  | 'sys.contentType.sys.linkType'
  | 'sys.contentType.sys.type'
  | 'sys.revision'
  | 'sys.type'
  | 'updatedAt';

type ContentfulImageFilterInput = {
  readonly altText: InputMaybe<StringQueryOperatorInput>;
  readonly asset: InputMaybe<ContentfulAssetFilterInput>;
  readonly caption: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly component: InputMaybe<ContentfulComponentFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulImageSysFilterInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type ContentfulImageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulImageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulImageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulImage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulImageGroupConnection_distinctArgs = {
  field: ContentfulImageFieldsEnum;
};


type ContentfulImageGroupConnection_groupArgs = {
  field: ContentfulImageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulImageGroupConnection_maxArgs = {
  field: ContentfulImageFieldsEnum;
};


type ContentfulImageGroupConnection_minArgs = {
  field: ContentfulImageFieldsEnum;
};


type ContentfulImageGroupConnection_sumArgs = {
  field: ContentfulImageFieldsEnum;
};

type ContentfulImageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ContentfulImageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ContentfulImageSys = {
  readonly contentType: Maybe<ContentfulImageSysContentType>;
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulImageSysContentType = {
  readonly sys: Maybe<ContentfulImageSysContentTypeSys>;
};

type ContentfulImageSysContentTypeFilterInput = {
  readonly sys: InputMaybe<ContentfulImageSysContentTypeSysFilterInput>;
};

type ContentfulImageSysContentTypeSys = {
  readonly id: Maybe<Scalars['String']>;
  readonly linkType: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulImageSysContentTypeSysFilterInput = {
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly linkType: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulImageSysFilterInput = {
  readonly contentType: InputMaybe<ContentfulImageSysContentTypeFilterInput>;
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulLink = ContentfulEntry & ContentfulReference & Node & {
  readonly children: ReadonlyArray<Node>;
  readonly component: Maybe<ReadonlyArray<Maybe<ContentfulComponent>>>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly label: Maybe<Scalars['String']>;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly ref: Maybe<ContentfulPage>;
  readonly slug: Maybe<Scalars['String']>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulLinkSys>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type ContentfulLink_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulLink_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulLinkConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulLinkEdge>;
  readonly group: ReadonlyArray<ContentfulLinkGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulLink>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulLinkConnection_distinctArgs = {
  field: ContentfulLinkFieldsEnum;
};


type ContentfulLinkConnection_groupArgs = {
  field: ContentfulLinkFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulLinkConnection_maxArgs = {
  field: ContentfulLinkFieldsEnum;
};


type ContentfulLinkConnection_minArgs = {
  field: ContentfulLinkFieldsEnum;
};


type ContentfulLinkConnection_sumArgs = {
  field: ContentfulLinkFieldsEnum;
};

type ContentfulLinkEdge = {
  readonly next: Maybe<ContentfulLink>;
  readonly node: ContentfulLink;
  readonly previous: Maybe<ContentfulLink>;
};

type ContentfulLinkFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'component'
  | 'component.children'
  | 'component.children.children'
  | 'component.children.children.children'
  | 'component.children.children.id'
  | 'component.children.id'
  | 'component.children.internal.content'
  | 'component.children.internal.contentDigest'
  | 'component.children.internal.description'
  | 'component.children.internal.fieldOwners'
  | 'component.children.internal.ignoreType'
  | 'component.children.internal.mediaType'
  | 'component.children.internal.owner'
  | 'component.children.internal.type'
  | 'component.children.parent.children'
  | 'component.children.parent.id'
  | 'component.contentful_id'
  | 'component.createdAt'
  | 'component.date'
  | 'component.heading'
  | 'component.id'
  | 'component.image.altText'
  | 'component.image.asset.children'
  | 'component.image.asset.contentful_id'
  | 'component.image.asset.createdAt'
  | 'component.image.asset.description'
  | 'component.image.asset.filename'
  | 'component.image.asset.filesize'
  | 'component.image.asset.gatsbyImage'
  | 'component.image.asset.gatsbyImageData'
  | 'component.image.asset.height'
  | 'component.image.asset.id'
  | 'component.image.asset.mimeType'
  | 'component.image.asset.node_locale'
  | 'component.image.asset.placeholderUrl'
  | 'component.image.asset.publicUrl'
  | 'component.image.asset.size'
  | 'component.image.asset.spaceId'
  | 'component.image.asset.title'
  | 'component.image.asset.updatedAt'
  | 'component.image.asset.url'
  | 'component.image.asset.width'
  | 'component.image.caption'
  | 'component.image.children'
  | 'component.image.children.children'
  | 'component.image.children.id'
  | 'component.image.component'
  | 'component.image.component.children'
  | 'component.image.component.contentful_id'
  | 'component.image.component.createdAt'
  | 'component.image.component.date'
  | 'component.image.component.heading'
  | 'component.image.component.id'
  | 'component.image.component.label'
  | 'component.image.component.links'
  | 'component.image.component.namedStrings'
  | 'component.image.component.node_locale'
  | 'component.image.component.section'
  | 'component.image.component.slug'
  | 'component.image.component.spaceId'
  | 'component.image.component.subheading'
  | 'component.image.component.title'
  | 'component.image.component.updatedAt'
  | 'component.image.contentful_id'
  | 'component.image.createdAt'
  | 'component.image.id'
  | 'component.image.internal.content'
  | 'component.image.internal.contentDigest'
  | 'component.image.internal.description'
  | 'component.image.internal.fieldOwners'
  | 'component.image.internal.ignoreType'
  | 'component.image.internal.mediaType'
  | 'component.image.internal.owner'
  | 'component.image.internal.type'
  | 'component.image.node_locale'
  | 'component.image.parent.children'
  | 'component.image.parent.id'
  | 'component.image.spaceId'
  | 'component.image.sys.revision'
  | 'component.image.sys.type'
  | 'component.image.updatedAt'
  | 'component.internal.content'
  | 'component.internal.contentDigest'
  | 'component.internal.description'
  | 'component.internal.fieldOwners'
  | 'component.internal.ignoreType'
  | 'component.internal.mediaType'
  | 'component.internal.owner'
  | 'component.internal.type'
  | 'component.label'
  | 'component.links'
  | 'component.links.children'
  | 'component.links.children.children'
  | 'component.links.children.id'
  | 'component.links.component'
  | 'component.links.component.children'
  | 'component.links.component.contentful_id'
  | 'component.links.component.createdAt'
  | 'component.links.component.date'
  | 'component.links.component.heading'
  | 'component.links.component.id'
  | 'component.links.component.label'
  | 'component.links.component.links'
  | 'component.links.component.namedStrings'
  | 'component.links.component.node_locale'
  | 'component.links.component.section'
  | 'component.links.component.slug'
  | 'component.links.component.spaceId'
  | 'component.links.component.subheading'
  | 'component.links.component.title'
  | 'component.links.component.updatedAt'
  | 'component.links.contentful_id'
  | 'component.links.createdAt'
  | 'component.links.id'
  | 'component.links.internal.content'
  | 'component.links.internal.contentDigest'
  | 'component.links.internal.description'
  | 'component.links.internal.fieldOwners'
  | 'component.links.internal.ignoreType'
  | 'component.links.internal.mediaType'
  | 'component.links.internal.owner'
  | 'component.links.internal.type'
  | 'component.links.label'
  | 'component.links.node_locale'
  | 'component.links.parent.children'
  | 'component.links.parent.id'
  | 'component.links.ref.children'
  | 'component.links.ref.contentful_id'
  | 'component.links.ref.createdAt'
  | 'component.links.ref.gatsbyPath'
  | 'component.links.ref.heading'
  | 'component.links.ref.id'
  | 'component.links.ref.link'
  | 'component.links.ref.node_locale'
  | 'component.links.ref.sections'
  | 'component.links.ref.slug'
  | 'component.links.ref.spaceId'
  | 'component.links.ref.subheading'
  | 'component.links.ref.title'
  | 'component.links.ref.updatedAt'
  | 'component.links.slug'
  | 'component.links.spaceId'
  | 'component.links.sys.revision'
  | 'component.links.sys.type'
  | 'component.links.title'
  | 'component.links.updatedAt'
  | 'component.namedStrings'
  | 'component.namedStrings.children'
  | 'component.namedStrings.children.children'
  | 'component.namedStrings.children.id'
  | 'component.namedStrings.component'
  | 'component.namedStrings.component.children'
  | 'component.namedStrings.component.contentful_id'
  | 'component.namedStrings.component.createdAt'
  | 'component.namedStrings.component.date'
  | 'component.namedStrings.component.heading'
  | 'component.namedStrings.component.id'
  | 'component.namedStrings.component.label'
  | 'component.namedStrings.component.links'
  | 'component.namedStrings.component.namedStrings'
  | 'component.namedStrings.component.node_locale'
  | 'component.namedStrings.component.section'
  | 'component.namedStrings.component.slug'
  | 'component.namedStrings.component.spaceId'
  | 'component.namedStrings.component.subheading'
  | 'component.namedStrings.component.title'
  | 'component.namedStrings.component.updatedAt'
  | 'component.namedStrings.contentful_id'
  | 'component.namedStrings.createdAt'
  | 'component.namedStrings.id'
  | 'component.namedStrings.internal.content'
  | 'component.namedStrings.internal.contentDigest'
  | 'component.namedStrings.internal.description'
  | 'component.namedStrings.internal.fieldOwners'
  | 'component.namedStrings.internal.ignoreType'
  | 'component.namedStrings.internal.mediaType'
  | 'component.namedStrings.internal.owner'
  | 'component.namedStrings.internal.type'
  | 'component.namedStrings.name'
  | 'component.namedStrings.node_locale'
  | 'component.namedStrings.parent.children'
  | 'component.namedStrings.parent.id'
  | 'component.namedStrings.spaceId'
  | 'component.namedStrings.sys.revision'
  | 'component.namedStrings.sys.type'
  | 'component.namedStrings.updatedAt'
  | 'component.namedStrings.value'
  | 'component.node_locale'
  | 'component.parent.children'
  | 'component.parent.children.children'
  | 'component.parent.children.id'
  | 'component.parent.id'
  | 'component.parent.internal.content'
  | 'component.parent.internal.contentDigest'
  | 'component.parent.internal.description'
  | 'component.parent.internal.fieldOwners'
  | 'component.parent.internal.ignoreType'
  | 'component.parent.internal.mediaType'
  | 'component.parent.internal.owner'
  | 'component.parent.internal.type'
  | 'component.parent.parent.children'
  | 'component.parent.parent.id'
  | 'component.richText.raw'
  | 'component.richText.references'
  | 'component.richText.references.children'
  | 'component.richText.references.contentful_id'
  | 'component.richText.references.createdAt'
  | 'component.richText.references.gatsbyPath'
  | 'component.richText.references.heading'
  | 'component.richText.references.id'
  | 'component.richText.references.link'
  | 'component.richText.references.node_locale'
  | 'component.richText.references.sections'
  | 'component.richText.references.slug'
  | 'component.richText.references.spaceId'
  | 'component.richText.references.subheading'
  | 'component.richText.references.title'
  | 'component.richText.references.updatedAt'
  | 'component.section'
  | 'component.section.children'
  | 'component.section.children.children'
  | 'component.section.children.id'
  | 'component.section.components'
  | 'component.section.components.children'
  | 'component.section.components.contentful_id'
  | 'component.section.components.createdAt'
  | 'component.section.components.date'
  | 'component.section.components.heading'
  | 'component.section.components.id'
  | 'component.section.components.label'
  | 'component.section.components.links'
  | 'component.section.components.namedStrings'
  | 'component.section.components.node_locale'
  | 'component.section.components.section'
  | 'component.section.components.slug'
  | 'component.section.components.spaceId'
  | 'component.section.components.subheading'
  | 'component.section.components.title'
  | 'component.section.components.updatedAt'
  | 'component.section.contentful_id'
  | 'component.section.createdAt'
  | 'component.section.heading'
  | 'component.section.id'
  | 'component.section.internal.content'
  | 'component.section.internal.contentDigest'
  | 'component.section.internal.description'
  | 'component.section.internal.fieldOwners'
  | 'component.section.internal.ignoreType'
  | 'component.section.internal.mediaType'
  | 'component.section.internal.owner'
  | 'component.section.internal.type'
  | 'component.section.node_locale'
  | 'component.section.page'
  | 'component.section.page.children'
  | 'component.section.page.contentful_id'
  | 'component.section.page.createdAt'
  | 'component.section.page.gatsbyPath'
  | 'component.section.page.heading'
  | 'component.section.page.id'
  | 'component.section.page.link'
  | 'component.section.page.node_locale'
  | 'component.section.page.sections'
  | 'component.section.page.slug'
  | 'component.section.page.spaceId'
  | 'component.section.page.subheading'
  | 'component.section.page.title'
  | 'component.section.page.updatedAt'
  | 'component.section.parent.children'
  | 'component.section.parent.id'
  | 'component.section.slug'
  | 'component.section.spaceId'
  | 'component.section.subheading'
  | 'component.section.sys.revision'
  | 'component.section.sys.type'
  | 'component.section.title'
  | 'component.section.type'
  | 'component.section.updatedAt'
  | 'component.slug'
  | 'component.spaceId'
  | 'component.subheading'
  | 'component.sys.revision'
  | 'component.sys.type'
  | 'component.title'
  | 'component.updatedAt'
  | 'contentful_id'
  | 'createdAt'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'label'
  | 'node_locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'ref.children'
  | 'ref.children.children'
  | 'ref.children.children.children'
  | 'ref.children.children.id'
  | 'ref.children.id'
  | 'ref.children.internal.content'
  | 'ref.children.internal.contentDigest'
  | 'ref.children.internal.description'
  | 'ref.children.internal.fieldOwners'
  | 'ref.children.internal.ignoreType'
  | 'ref.children.internal.mediaType'
  | 'ref.children.internal.owner'
  | 'ref.children.internal.type'
  | 'ref.children.parent.children'
  | 'ref.children.parent.id'
  | 'ref.contentful_id'
  | 'ref.createdAt'
  | 'ref.gatsbyPath'
  | 'ref.heading'
  | 'ref.id'
  | 'ref.internal.content'
  | 'ref.internal.contentDigest'
  | 'ref.internal.description'
  | 'ref.internal.fieldOwners'
  | 'ref.internal.ignoreType'
  | 'ref.internal.mediaType'
  | 'ref.internal.owner'
  | 'ref.internal.type'
  | 'ref.link'
  | 'ref.link.children'
  | 'ref.link.children.children'
  | 'ref.link.children.id'
  | 'ref.link.component'
  | 'ref.link.component.children'
  | 'ref.link.component.contentful_id'
  | 'ref.link.component.createdAt'
  | 'ref.link.component.date'
  | 'ref.link.component.heading'
  | 'ref.link.component.id'
  | 'ref.link.component.label'
  | 'ref.link.component.links'
  | 'ref.link.component.namedStrings'
  | 'ref.link.component.node_locale'
  | 'ref.link.component.section'
  | 'ref.link.component.slug'
  | 'ref.link.component.spaceId'
  | 'ref.link.component.subheading'
  | 'ref.link.component.title'
  | 'ref.link.component.updatedAt'
  | 'ref.link.contentful_id'
  | 'ref.link.createdAt'
  | 'ref.link.id'
  | 'ref.link.internal.content'
  | 'ref.link.internal.contentDigest'
  | 'ref.link.internal.description'
  | 'ref.link.internal.fieldOwners'
  | 'ref.link.internal.ignoreType'
  | 'ref.link.internal.mediaType'
  | 'ref.link.internal.owner'
  | 'ref.link.internal.type'
  | 'ref.link.label'
  | 'ref.link.node_locale'
  | 'ref.link.parent.children'
  | 'ref.link.parent.id'
  | 'ref.link.ref.children'
  | 'ref.link.ref.contentful_id'
  | 'ref.link.ref.createdAt'
  | 'ref.link.ref.gatsbyPath'
  | 'ref.link.ref.heading'
  | 'ref.link.ref.id'
  | 'ref.link.ref.link'
  | 'ref.link.ref.node_locale'
  | 'ref.link.ref.sections'
  | 'ref.link.ref.slug'
  | 'ref.link.ref.spaceId'
  | 'ref.link.ref.subheading'
  | 'ref.link.ref.title'
  | 'ref.link.ref.updatedAt'
  | 'ref.link.slug'
  | 'ref.link.spaceId'
  | 'ref.link.sys.revision'
  | 'ref.link.sys.type'
  | 'ref.link.title'
  | 'ref.link.updatedAt'
  | 'ref.node_locale'
  | 'ref.parent.children'
  | 'ref.parent.children.children'
  | 'ref.parent.children.id'
  | 'ref.parent.id'
  | 'ref.parent.internal.content'
  | 'ref.parent.internal.contentDigest'
  | 'ref.parent.internal.description'
  | 'ref.parent.internal.fieldOwners'
  | 'ref.parent.internal.ignoreType'
  | 'ref.parent.internal.mediaType'
  | 'ref.parent.internal.owner'
  | 'ref.parent.internal.type'
  | 'ref.parent.parent.children'
  | 'ref.parent.parent.id'
  | 'ref.sections'
  | 'ref.sections.children'
  | 'ref.sections.children.children'
  | 'ref.sections.children.id'
  | 'ref.sections.components'
  | 'ref.sections.components.children'
  | 'ref.sections.components.contentful_id'
  | 'ref.sections.components.createdAt'
  | 'ref.sections.components.date'
  | 'ref.sections.components.heading'
  | 'ref.sections.components.id'
  | 'ref.sections.components.label'
  | 'ref.sections.components.links'
  | 'ref.sections.components.namedStrings'
  | 'ref.sections.components.node_locale'
  | 'ref.sections.components.section'
  | 'ref.sections.components.slug'
  | 'ref.sections.components.spaceId'
  | 'ref.sections.components.subheading'
  | 'ref.sections.components.title'
  | 'ref.sections.components.updatedAt'
  | 'ref.sections.contentful_id'
  | 'ref.sections.createdAt'
  | 'ref.sections.heading'
  | 'ref.sections.id'
  | 'ref.sections.internal.content'
  | 'ref.sections.internal.contentDigest'
  | 'ref.sections.internal.description'
  | 'ref.sections.internal.fieldOwners'
  | 'ref.sections.internal.ignoreType'
  | 'ref.sections.internal.mediaType'
  | 'ref.sections.internal.owner'
  | 'ref.sections.internal.type'
  | 'ref.sections.node_locale'
  | 'ref.sections.page'
  | 'ref.sections.page.children'
  | 'ref.sections.page.contentful_id'
  | 'ref.sections.page.createdAt'
  | 'ref.sections.page.gatsbyPath'
  | 'ref.sections.page.heading'
  | 'ref.sections.page.id'
  | 'ref.sections.page.link'
  | 'ref.sections.page.node_locale'
  | 'ref.sections.page.sections'
  | 'ref.sections.page.slug'
  | 'ref.sections.page.spaceId'
  | 'ref.sections.page.subheading'
  | 'ref.sections.page.title'
  | 'ref.sections.page.updatedAt'
  | 'ref.sections.parent.children'
  | 'ref.sections.parent.id'
  | 'ref.sections.slug'
  | 'ref.sections.spaceId'
  | 'ref.sections.subheading'
  | 'ref.sections.sys.revision'
  | 'ref.sections.sys.type'
  | 'ref.sections.title'
  | 'ref.sections.type'
  | 'ref.sections.updatedAt'
  | 'ref.slug'
  | 'ref.spaceId'
  | 'ref.subheading'
  | 'ref.sys.revision'
  | 'ref.sys.type'
  | 'ref.title'
  | 'ref.updatedAt'
  | 'slug'
  | 'spaceId'
  | 'sys.contentType.sys.id'
  | 'sys.contentType.sys.linkType'
  | 'sys.contentType.sys.type'
  | 'sys.revision'
  | 'sys.type'
  | 'title'
  | 'updatedAt';

type ContentfulLinkFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly component: InputMaybe<ContentfulComponentFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly label: InputMaybe<StringQueryOperatorInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly ref: InputMaybe<ContentfulPageFilterInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulLinkSysFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type ContentfulLinkFilterListInput = {
  readonly elemMatch: InputMaybe<ContentfulLinkFilterInput>;
};

type ContentfulLinkGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulLinkEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulLinkGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulLink>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulLinkGroupConnection_distinctArgs = {
  field: ContentfulLinkFieldsEnum;
};


type ContentfulLinkGroupConnection_groupArgs = {
  field: ContentfulLinkFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulLinkGroupConnection_maxArgs = {
  field: ContentfulLinkFieldsEnum;
};


type ContentfulLinkGroupConnection_minArgs = {
  field: ContentfulLinkFieldsEnum;
};


type ContentfulLinkGroupConnection_sumArgs = {
  field: ContentfulLinkFieldsEnum;
};

type ContentfulLinkSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ContentfulLinkFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ContentfulLinkSys = {
  readonly contentType: Maybe<ContentfulLinkSysContentType>;
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulLinkSysContentType = {
  readonly sys: Maybe<ContentfulLinkSysContentTypeSys>;
};

type ContentfulLinkSysContentTypeFilterInput = {
  readonly sys: InputMaybe<ContentfulLinkSysContentTypeSysFilterInput>;
};

type ContentfulLinkSysContentTypeSys = {
  readonly id: Maybe<Scalars['String']>;
  readonly linkType: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulLinkSysContentTypeSysFilterInput = {
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly linkType: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulLinkSysFilterInput = {
  readonly contentType: InputMaybe<ContentfulLinkSysContentTypeFilterInput>;
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulMenu = ContentfulEntry & ContentfulReference & Node & {
  readonly children: ReadonlyArray<Node>;
  readonly contentful_id: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
};

type ContentfulMenuConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulMenuEdge>;
  readonly group: ReadonlyArray<ContentfulMenuGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulMenu>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulMenuConnection_distinctArgs = {
  field: ContentfulMenuFieldsEnum;
};


type ContentfulMenuConnection_groupArgs = {
  field: ContentfulMenuFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulMenuConnection_maxArgs = {
  field: ContentfulMenuFieldsEnum;
};


type ContentfulMenuConnection_minArgs = {
  field: ContentfulMenuFieldsEnum;
};


type ContentfulMenuConnection_sumArgs = {
  field: ContentfulMenuFieldsEnum;
};

type ContentfulMenuEdge = {
  readonly next: Maybe<ContentfulMenu>;
  readonly node: ContentfulMenu;
  readonly previous: Maybe<ContentfulMenu>;
};

type ContentfulMenuFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'contentful_id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'node_locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type ContentfulMenuFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type ContentfulMenuGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulMenuEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulMenuGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulMenu>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulMenuGroupConnection_distinctArgs = {
  field: ContentfulMenuFieldsEnum;
};


type ContentfulMenuGroupConnection_groupArgs = {
  field: ContentfulMenuFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulMenuGroupConnection_maxArgs = {
  field: ContentfulMenuFieldsEnum;
};


type ContentfulMenuGroupConnection_minArgs = {
  field: ContentfulMenuFieldsEnum;
};


type ContentfulMenuGroupConnection_sumArgs = {
  field: ContentfulMenuFieldsEnum;
};

type ContentfulMenuSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ContentfulMenuFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ContentfulNameValuePair = ContentfulEntry & ContentfulReference & Node & {
  readonly children: ReadonlyArray<Node>;
  readonly component: Maybe<ReadonlyArray<Maybe<ContentfulComponent>>>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulNameValuePairSys>;
  readonly updatedAt: Maybe<Scalars['Date']>;
  readonly value: Maybe<Scalars['String']>;
};


type ContentfulNameValuePair_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulNameValuePair_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulNameValuePairConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulNameValuePairEdge>;
  readonly group: ReadonlyArray<ContentfulNameValuePairGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulNameValuePair>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulNameValuePairConnection_distinctArgs = {
  field: ContentfulNameValuePairFieldsEnum;
};


type ContentfulNameValuePairConnection_groupArgs = {
  field: ContentfulNameValuePairFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulNameValuePairConnection_maxArgs = {
  field: ContentfulNameValuePairFieldsEnum;
};


type ContentfulNameValuePairConnection_minArgs = {
  field: ContentfulNameValuePairFieldsEnum;
};


type ContentfulNameValuePairConnection_sumArgs = {
  field: ContentfulNameValuePairFieldsEnum;
};

type ContentfulNameValuePairEdge = {
  readonly next: Maybe<ContentfulNameValuePair>;
  readonly node: ContentfulNameValuePair;
  readonly previous: Maybe<ContentfulNameValuePair>;
};

type ContentfulNameValuePairFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'component'
  | 'component.children'
  | 'component.children.children'
  | 'component.children.children.children'
  | 'component.children.children.id'
  | 'component.children.id'
  | 'component.children.internal.content'
  | 'component.children.internal.contentDigest'
  | 'component.children.internal.description'
  | 'component.children.internal.fieldOwners'
  | 'component.children.internal.ignoreType'
  | 'component.children.internal.mediaType'
  | 'component.children.internal.owner'
  | 'component.children.internal.type'
  | 'component.children.parent.children'
  | 'component.children.parent.id'
  | 'component.contentful_id'
  | 'component.createdAt'
  | 'component.date'
  | 'component.heading'
  | 'component.id'
  | 'component.image.altText'
  | 'component.image.asset.children'
  | 'component.image.asset.contentful_id'
  | 'component.image.asset.createdAt'
  | 'component.image.asset.description'
  | 'component.image.asset.filename'
  | 'component.image.asset.filesize'
  | 'component.image.asset.gatsbyImage'
  | 'component.image.asset.gatsbyImageData'
  | 'component.image.asset.height'
  | 'component.image.asset.id'
  | 'component.image.asset.mimeType'
  | 'component.image.asset.node_locale'
  | 'component.image.asset.placeholderUrl'
  | 'component.image.asset.publicUrl'
  | 'component.image.asset.size'
  | 'component.image.asset.spaceId'
  | 'component.image.asset.title'
  | 'component.image.asset.updatedAt'
  | 'component.image.asset.url'
  | 'component.image.asset.width'
  | 'component.image.caption'
  | 'component.image.children'
  | 'component.image.children.children'
  | 'component.image.children.id'
  | 'component.image.component'
  | 'component.image.component.children'
  | 'component.image.component.contentful_id'
  | 'component.image.component.createdAt'
  | 'component.image.component.date'
  | 'component.image.component.heading'
  | 'component.image.component.id'
  | 'component.image.component.label'
  | 'component.image.component.links'
  | 'component.image.component.namedStrings'
  | 'component.image.component.node_locale'
  | 'component.image.component.section'
  | 'component.image.component.slug'
  | 'component.image.component.spaceId'
  | 'component.image.component.subheading'
  | 'component.image.component.title'
  | 'component.image.component.updatedAt'
  | 'component.image.contentful_id'
  | 'component.image.createdAt'
  | 'component.image.id'
  | 'component.image.internal.content'
  | 'component.image.internal.contentDigest'
  | 'component.image.internal.description'
  | 'component.image.internal.fieldOwners'
  | 'component.image.internal.ignoreType'
  | 'component.image.internal.mediaType'
  | 'component.image.internal.owner'
  | 'component.image.internal.type'
  | 'component.image.node_locale'
  | 'component.image.parent.children'
  | 'component.image.parent.id'
  | 'component.image.spaceId'
  | 'component.image.sys.revision'
  | 'component.image.sys.type'
  | 'component.image.updatedAt'
  | 'component.internal.content'
  | 'component.internal.contentDigest'
  | 'component.internal.description'
  | 'component.internal.fieldOwners'
  | 'component.internal.ignoreType'
  | 'component.internal.mediaType'
  | 'component.internal.owner'
  | 'component.internal.type'
  | 'component.label'
  | 'component.links'
  | 'component.links.children'
  | 'component.links.children.children'
  | 'component.links.children.id'
  | 'component.links.component'
  | 'component.links.component.children'
  | 'component.links.component.contentful_id'
  | 'component.links.component.createdAt'
  | 'component.links.component.date'
  | 'component.links.component.heading'
  | 'component.links.component.id'
  | 'component.links.component.label'
  | 'component.links.component.links'
  | 'component.links.component.namedStrings'
  | 'component.links.component.node_locale'
  | 'component.links.component.section'
  | 'component.links.component.slug'
  | 'component.links.component.spaceId'
  | 'component.links.component.subheading'
  | 'component.links.component.title'
  | 'component.links.component.updatedAt'
  | 'component.links.contentful_id'
  | 'component.links.createdAt'
  | 'component.links.id'
  | 'component.links.internal.content'
  | 'component.links.internal.contentDigest'
  | 'component.links.internal.description'
  | 'component.links.internal.fieldOwners'
  | 'component.links.internal.ignoreType'
  | 'component.links.internal.mediaType'
  | 'component.links.internal.owner'
  | 'component.links.internal.type'
  | 'component.links.label'
  | 'component.links.node_locale'
  | 'component.links.parent.children'
  | 'component.links.parent.id'
  | 'component.links.ref.children'
  | 'component.links.ref.contentful_id'
  | 'component.links.ref.createdAt'
  | 'component.links.ref.gatsbyPath'
  | 'component.links.ref.heading'
  | 'component.links.ref.id'
  | 'component.links.ref.link'
  | 'component.links.ref.node_locale'
  | 'component.links.ref.sections'
  | 'component.links.ref.slug'
  | 'component.links.ref.spaceId'
  | 'component.links.ref.subheading'
  | 'component.links.ref.title'
  | 'component.links.ref.updatedAt'
  | 'component.links.slug'
  | 'component.links.spaceId'
  | 'component.links.sys.revision'
  | 'component.links.sys.type'
  | 'component.links.title'
  | 'component.links.updatedAt'
  | 'component.namedStrings'
  | 'component.namedStrings.children'
  | 'component.namedStrings.children.children'
  | 'component.namedStrings.children.id'
  | 'component.namedStrings.component'
  | 'component.namedStrings.component.children'
  | 'component.namedStrings.component.contentful_id'
  | 'component.namedStrings.component.createdAt'
  | 'component.namedStrings.component.date'
  | 'component.namedStrings.component.heading'
  | 'component.namedStrings.component.id'
  | 'component.namedStrings.component.label'
  | 'component.namedStrings.component.links'
  | 'component.namedStrings.component.namedStrings'
  | 'component.namedStrings.component.node_locale'
  | 'component.namedStrings.component.section'
  | 'component.namedStrings.component.slug'
  | 'component.namedStrings.component.spaceId'
  | 'component.namedStrings.component.subheading'
  | 'component.namedStrings.component.title'
  | 'component.namedStrings.component.updatedAt'
  | 'component.namedStrings.contentful_id'
  | 'component.namedStrings.createdAt'
  | 'component.namedStrings.id'
  | 'component.namedStrings.internal.content'
  | 'component.namedStrings.internal.contentDigest'
  | 'component.namedStrings.internal.description'
  | 'component.namedStrings.internal.fieldOwners'
  | 'component.namedStrings.internal.ignoreType'
  | 'component.namedStrings.internal.mediaType'
  | 'component.namedStrings.internal.owner'
  | 'component.namedStrings.internal.type'
  | 'component.namedStrings.name'
  | 'component.namedStrings.node_locale'
  | 'component.namedStrings.parent.children'
  | 'component.namedStrings.parent.id'
  | 'component.namedStrings.spaceId'
  | 'component.namedStrings.sys.revision'
  | 'component.namedStrings.sys.type'
  | 'component.namedStrings.updatedAt'
  | 'component.namedStrings.value'
  | 'component.node_locale'
  | 'component.parent.children'
  | 'component.parent.children.children'
  | 'component.parent.children.id'
  | 'component.parent.id'
  | 'component.parent.internal.content'
  | 'component.parent.internal.contentDigest'
  | 'component.parent.internal.description'
  | 'component.parent.internal.fieldOwners'
  | 'component.parent.internal.ignoreType'
  | 'component.parent.internal.mediaType'
  | 'component.parent.internal.owner'
  | 'component.parent.internal.type'
  | 'component.parent.parent.children'
  | 'component.parent.parent.id'
  | 'component.richText.raw'
  | 'component.richText.references'
  | 'component.richText.references.children'
  | 'component.richText.references.contentful_id'
  | 'component.richText.references.createdAt'
  | 'component.richText.references.gatsbyPath'
  | 'component.richText.references.heading'
  | 'component.richText.references.id'
  | 'component.richText.references.link'
  | 'component.richText.references.node_locale'
  | 'component.richText.references.sections'
  | 'component.richText.references.slug'
  | 'component.richText.references.spaceId'
  | 'component.richText.references.subheading'
  | 'component.richText.references.title'
  | 'component.richText.references.updatedAt'
  | 'component.section'
  | 'component.section.children'
  | 'component.section.children.children'
  | 'component.section.children.id'
  | 'component.section.components'
  | 'component.section.components.children'
  | 'component.section.components.contentful_id'
  | 'component.section.components.createdAt'
  | 'component.section.components.date'
  | 'component.section.components.heading'
  | 'component.section.components.id'
  | 'component.section.components.label'
  | 'component.section.components.links'
  | 'component.section.components.namedStrings'
  | 'component.section.components.node_locale'
  | 'component.section.components.section'
  | 'component.section.components.slug'
  | 'component.section.components.spaceId'
  | 'component.section.components.subheading'
  | 'component.section.components.title'
  | 'component.section.components.updatedAt'
  | 'component.section.contentful_id'
  | 'component.section.createdAt'
  | 'component.section.heading'
  | 'component.section.id'
  | 'component.section.internal.content'
  | 'component.section.internal.contentDigest'
  | 'component.section.internal.description'
  | 'component.section.internal.fieldOwners'
  | 'component.section.internal.ignoreType'
  | 'component.section.internal.mediaType'
  | 'component.section.internal.owner'
  | 'component.section.internal.type'
  | 'component.section.node_locale'
  | 'component.section.page'
  | 'component.section.page.children'
  | 'component.section.page.contentful_id'
  | 'component.section.page.createdAt'
  | 'component.section.page.gatsbyPath'
  | 'component.section.page.heading'
  | 'component.section.page.id'
  | 'component.section.page.link'
  | 'component.section.page.node_locale'
  | 'component.section.page.sections'
  | 'component.section.page.slug'
  | 'component.section.page.spaceId'
  | 'component.section.page.subheading'
  | 'component.section.page.title'
  | 'component.section.page.updatedAt'
  | 'component.section.parent.children'
  | 'component.section.parent.id'
  | 'component.section.slug'
  | 'component.section.spaceId'
  | 'component.section.subheading'
  | 'component.section.sys.revision'
  | 'component.section.sys.type'
  | 'component.section.title'
  | 'component.section.type'
  | 'component.section.updatedAt'
  | 'component.slug'
  | 'component.spaceId'
  | 'component.subheading'
  | 'component.sys.revision'
  | 'component.sys.type'
  | 'component.title'
  | 'component.updatedAt'
  | 'contentful_id'
  | 'createdAt'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'name'
  | 'node_locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'spaceId'
  | 'sys.contentType.sys.id'
  | 'sys.contentType.sys.linkType'
  | 'sys.contentType.sys.type'
  | 'sys.revision'
  | 'sys.type'
  | 'updatedAt'
  | 'value';

type ContentfulNameValuePairFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly component: InputMaybe<ContentfulComponentFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulNameValuePairSysFilterInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
  readonly value: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulNameValuePairFilterListInput = {
  readonly elemMatch: InputMaybe<ContentfulNameValuePairFilterInput>;
};

type ContentfulNameValuePairGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulNameValuePairEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulNameValuePairGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulNameValuePair>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulNameValuePairGroupConnection_distinctArgs = {
  field: ContentfulNameValuePairFieldsEnum;
};


type ContentfulNameValuePairGroupConnection_groupArgs = {
  field: ContentfulNameValuePairFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulNameValuePairGroupConnection_maxArgs = {
  field: ContentfulNameValuePairFieldsEnum;
};


type ContentfulNameValuePairGroupConnection_minArgs = {
  field: ContentfulNameValuePairFieldsEnum;
};


type ContentfulNameValuePairGroupConnection_sumArgs = {
  field: ContentfulNameValuePairFieldsEnum;
};

type ContentfulNameValuePairSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ContentfulNameValuePairFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ContentfulNameValuePairSys = {
  readonly contentType: Maybe<ContentfulNameValuePairSysContentType>;
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulNameValuePairSysContentType = {
  readonly sys: Maybe<ContentfulNameValuePairSysContentTypeSys>;
};

type ContentfulNameValuePairSysContentTypeFilterInput = {
  readonly sys: InputMaybe<ContentfulNameValuePairSysContentTypeSysFilterInput>;
};

type ContentfulNameValuePairSysContentTypeSys = {
  readonly id: Maybe<Scalars['String']>;
  readonly linkType: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulNameValuePairSysContentTypeSysFilterInput = {
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly linkType: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulNameValuePairSysFilterInput = {
  readonly contentType: InputMaybe<ContentfulNameValuePairSysContentTypeFilterInput>;
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulPage = ContentfulEntry & ContentfulReference & Node & {
  readonly children: ReadonlyArray<Node>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly gatsbyPath: Maybe<Scalars['String']>;
  readonly heading: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly link: Maybe<ReadonlyArray<Maybe<ContentfulLink>>>;
  readonly node_locale: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly sections: Maybe<ReadonlyArray<Maybe<ContentfulSection>>>;
  readonly slug: Maybe<Scalars['String']>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly subheading: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulPageSys>;
  readonly title: Maybe<Scalars['String']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type ContentfulPage_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulPage_gatsbyPathArgs = {
  filePath: InputMaybe<Scalars['String']>;
};


type ContentfulPage_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulPageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulPageEdge>;
  readonly group: ReadonlyArray<ContentfulPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulPageConnection_distinctArgs = {
  field: ContentfulPageFieldsEnum;
};


type ContentfulPageConnection_groupArgs = {
  field: ContentfulPageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulPageConnection_maxArgs = {
  field: ContentfulPageFieldsEnum;
};


type ContentfulPageConnection_minArgs = {
  field: ContentfulPageFieldsEnum;
};


type ContentfulPageConnection_sumArgs = {
  field: ContentfulPageFieldsEnum;
};

type ContentfulPageEdge = {
  readonly next: Maybe<ContentfulPage>;
  readonly node: ContentfulPage;
  readonly previous: Maybe<ContentfulPage>;
};

type ContentfulPageFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'contentful_id'
  | 'createdAt'
  | 'gatsbyPath'
  | 'heading'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'link'
  | 'link.children'
  | 'link.children.children'
  | 'link.children.children.children'
  | 'link.children.children.id'
  | 'link.children.id'
  | 'link.children.internal.content'
  | 'link.children.internal.contentDigest'
  | 'link.children.internal.description'
  | 'link.children.internal.fieldOwners'
  | 'link.children.internal.ignoreType'
  | 'link.children.internal.mediaType'
  | 'link.children.internal.owner'
  | 'link.children.internal.type'
  | 'link.children.parent.children'
  | 'link.children.parent.id'
  | 'link.component'
  | 'link.component.children'
  | 'link.component.children.children'
  | 'link.component.children.id'
  | 'link.component.contentful_id'
  | 'link.component.createdAt'
  | 'link.component.date'
  | 'link.component.heading'
  | 'link.component.id'
  | 'link.component.image.altText'
  | 'link.component.image.caption'
  | 'link.component.image.children'
  | 'link.component.image.component'
  | 'link.component.image.contentful_id'
  | 'link.component.image.createdAt'
  | 'link.component.image.id'
  | 'link.component.image.node_locale'
  | 'link.component.image.spaceId'
  | 'link.component.image.updatedAt'
  | 'link.component.internal.content'
  | 'link.component.internal.contentDigest'
  | 'link.component.internal.description'
  | 'link.component.internal.fieldOwners'
  | 'link.component.internal.ignoreType'
  | 'link.component.internal.mediaType'
  | 'link.component.internal.owner'
  | 'link.component.internal.type'
  | 'link.component.label'
  | 'link.component.links'
  | 'link.component.links.children'
  | 'link.component.links.component'
  | 'link.component.links.contentful_id'
  | 'link.component.links.createdAt'
  | 'link.component.links.id'
  | 'link.component.links.label'
  | 'link.component.links.node_locale'
  | 'link.component.links.slug'
  | 'link.component.links.spaceId'
  | 'link.component.links.title'
  | 'link.component.links.updatedAt'
  | 'link.component.namedStrings'
  | 'link.component.namedStrings.children'
  | 'link.component.namedStrings.component'
  | 'link.component.namedStrings.contentful_id'
  | 'link.component.namedStrings.createdAt'
  | 'link.component.namedStrings.id'
  | 'link.component.namedStrings.name'
  | 'link.component.namedStrings.node_locale'
  | 'link.component.namedStrings.spaceId'
  | 'link.component.namedStrings.updatedAt'
  | 'link.component.namedStrings.value'
  | 'link.component.node_locale'
  | 'link.component.parent.children'
  | 'link.component.parent.id'
  | 'link.component.richText.raw'
  | 'link.component.richText.references'
  | 'link.component.section'
  | 'link.component.section.children'
  | 'link.component.section.components'
  | 'link.component.section.contentful_id'
  | 'link.component.section.createdAt'
  | 'link.component.section.heading'
  | 'link.component.section.id'
  | 'link.component.section.node_locale'
  | 'link.component.section.page'
  | 'link.component.section.slug'
  | 'link.component.section.spaceId'
  | 'link.component.section.subheading'
  | 'link.component.section.title'
  | 'link.component.section.type'
  | 'link.component.section.updatedAt'
  | 'link.component.slug'
  | 'link.component.spaceId'
  | 'link.component.subheading'
  | 'link.component.sys.revision'
  | 'link.component.sys.type'
  | 'link.component.title'
  | 'link.component.updatedAt'
  | 'link.contentful_id'
  | 'link.createdAt'
  | 'link.id'
  | 'link.internal.content'
  | 'link.internal.contentDigest'
  | 'link.internal.description'
  | 'link.internal.fieldOwners'
  | 'link.internal.ignoreType'
  | 'link.internal.mediaType'
  | 'link.internal.owner'
  | 'link.internal.type'
  | 'link.label'
  | 'link.node_locale'
  | 'link.parent.children'
  | 'link.parent.children.children'
  | 'link.parent.children.id'
  | 'link.parent.id'
  | 'link.parent.internal.content'
  | 'link.parent.internal.contentDigest'
  | 'link.parent.internal.description'
  | 'link.parent.internal.fieldOwners'
  | 'link.parent.internal.ignoreType'
  | 'link.parent.internal.mediaType'
  | 'link.parent.internal.owner'
  | 'link.parent.internal.type'
  | 'link.parent.parent.children'
  | 'link.parent.parent.id'
  | 'link.ref.children'
  | 'link.ref.children.children'
  | 'link.ref.children.id'
  | 'link.ref.contentful_id'
  | 'link.ref.createdAt'
  | 'link.ref.gatsbyPath'
  | 'link.ref.heading'
  | 'link.ref.id'
  | 'link.ref.internal.content'
  | 'link.ref.internal.contentDigest'
  | 'link.ref.internal.description'
  | 'link.ref.internal.fieldOwners'
  | 'link.ref.internal.ignoreType'
  | 'link.ref.internal.mediaType'
  | 'link.ref.internal.owner'
  | 'link.ref.internal.type'
  | 'link.ref.link'
  | 'link.ref.link.children'
  | 'link.ref.link.component'
  | 'link.ref.link.contentful_id'
  | 'link.ref.link.createdAt'
  | 'link.ref.link.id'
  | 'link.ref.link.label'
  | 'link.ref.link.node_locale'
  | 'link.ref.link.slug'
  | 'link.ref.link.spaceId'
  | 'link.ref.link.title'
  | 'link.ref.link.updatedAt'
  | 'link.ref.node_locale'
  | 'link.ref.parent.children'
  | 'link.ref.parent.id'
  | 'link.ref.sections'
  | 'link.ref.sections.children'
  | 'link.ref.sections.components'
  | 'link.ref.sections.contentful_id'
  | 'link.ref.sections.createdAt'
  | 'link.ref.sections.heading'
  | 'link.ref.sections.id'
  | 'link.ref.sections.node_locale'
  | 'link.ref.sections.page'
  | 'link.ref.sections.slug'
  | 'link.ref.sections.spaceId'
  | 'link.ref.sections.subheading'
  | 'link.ref.sections.title'
  | 'link.ref.sections.type'
  | 'link.ref.sections.updatedAt'
  | 'link.ref.slug'
  | 'link.ref.spaceId'
  | 'link.ref.subheading'
  | 'link.ref.sys.revision'
  | 'link.ref.sys.type'
  | 'link.ref.title'
  | 'link.ref.updatedAt'
  | 'link.slug'
  | 'link.spaceId'
  | 'link.sys.revision'
  | 'link.sys.type'
  | 'link.title'
  | 'link.updatedAt'
  | 'node_locale'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'sections'
  | 'sections.children'
  | 'sections.children.children'
  | 'sections.children.children.children'
  | 'sections.children.children.id'
  | 'sections.children.id'
  | 'sections.children.internal.content'
  | 'sections.children.internal.contentDigest'
  | 'sections.children.internal.description'
  | 'sections.children.internal.fieldOwners'
  | 'sections.children.internal.ignoreType'
  | 'sections.children.internal.mediaType'
  | 'sections.children.internal.owner'
  | 'sections.children.internal.type'
  | 'sections.children.parent.children'
  | 'sections.children.parent.id'
  | 'sections.components'
  | 'sections.components.children'
  | 'sections.components.children.children'
  | 'sections.components.children.id'
  | 'sections.components.contentful_id'
  | 'sections.components.createdAt'
  | 'sections.components.date'
  | 'sections.components.heading'
  | 'sections.components.id'
  | 'sections.components.image.altText'
  | 'sections.components.image.caption'
  | 'sections.components.image.children'
  | 'sections.components.image.component'
  | 'sections.components.image.contentful_id'
  | 'sections.components.image.createdAt'
  | 'sections.components.image.id'
  | 'sections.components.image.node_locale'
  | 'sections.components.image.spaceId'
  | 'sections.components.image.updatedAt'
  | 'sections.components.internal.content'
  | 'sections.components.internal.contentDigest'
  | 'sections.components.internal.description'
  | 'sections.components.internal.fieldOwners'
  | 'sections.components.internal.ignoreType'
  | 'sections.components.internal.mediaType'
  | 'sections.components.internal.owner'
  | 'sections.components.internal.type'
  | 'sections.components.label'
  | 'sections.components.links'
  | 'sections.components.links.children'
  | 'sections.components.links.component'
  | 'sections.components.links.contentful_id'
  | 'sections.components.links.createdAt'
  | 'sections.components.links.id'
  | 'sections.components.links.label'
  | 'sections.components.links.node_locale'
  | 'sections.components.links.slug'
  | 'sections.components.links.spaceId'
  | 'sections.components.links.title'
  | 'sections.components.links.updatedAt'
  | 'sections.components.namedStrings'
  | 'sections.components.namedStrings.children'
  | 'sections.components.namedStrings.component'
  | 'sections.components.namedStrings.contentful_id'
  | 'sections.components.namedStrings.createdAt'
  | 'sections.components.namedStrings.id'
  | 'sections.components.namedStrings.name'
  | 'sections.components.namedStrings.node_locale'
  | 'sections.components.namedStrings.spaceId'
  | 'sections.components.namedStrings.updatedAt'
  | 'sections.components.namedStrings.value'
  | 'sections.components.node_locale'
  | 'sections.components.parent.children'
  | 'sections.components.parent.id'
  | 'sections.components.richText.raw'
  | 'sections.components.richText.references'
  | 'sections.components.section'
  | 'sections.components.section.children'
  | 'sections.components.section.components'
  | 'sections.components.section.contentful_id'
  | 'sections.components.section.createdAt'
  | 'sections.components.section.heading'
  | 'sections.components.section.id'
  | 'sections.components.section.node_locale'
  | 'sections.components.section.page'
  | 'sections.components.section.slug'
  | 'sections.components.section.spaceId'
  | 'sections.components.section.subheading'
  | 'sections.components.section.title'
  | 'sections.components.section.type'
  | 'sections.components.section.updatedAt'
  | 'sections.components.slug'
  | 'sections.components.spaceId'
  | 'sections.components.subheading'
  | 'sections.components.sys.revision'
  | 'sections.components.sys.type'
  | 'sections.components.title'
  | 'sections.components.updatedAt'
  | 'sections.contentful_id'
  | 'sections.createdAt'
  | 'sections.heading'
  | 'sections.id'
  | 'sections.internal.content'
  | 'sections.internal.contentDigest'
  | 'sections.internal.description'
  | 'sections.internal.fieldOwners'
  | 'sections.internal.ignoreType'
  | 'sections.internal.mediaType'
  | 'sections.internal.owner'
  | 'sections.internal.type'
  | 'sections.node_locale'
  | 'sections.page'
  | 'sections.page.children'
  | 'sections.page.children.children'
  | 'sections.page.children.id'
  | 'sections.page.contentful_id'
  | 'sections.page.createdAt'
  | 'sections.page.gatsbyPath'
  | 'sections.page.heading'
  | 'sections.page.id'
  | 'sections.page.internal.content'
  | 'sections.page.internal.contentDigest'
  | 'sections.page.internal.description'
  | 'sections.page.internal.fieldOwners'
  | 'sections.page.internal.ignoreType'
  | 'sections.page.internal.mediaType'
  | 'sections.page.internal.owner'
  | 'sections.page.internal.type'
  | 'sections.page.link'
  | 'sections.page.link.children'
  | 'sections.page.link.component'
  | 'sections.page.link.contentful_id'
  | 'sections.page.link.createdAt'
  | 'sections.page.link.id'
  | 'sections.page.link.label'
  | 'sections.page.link.node_locale'
  | 'sections.page.link.slug'
  | 'sections.page.link.spaceId'
  | 'sections.page.link.title'
  | 'sections.page.link.updatedAt'
  | 'sections.page.node_locale'
  | 'sections.page.parent.children'
  | 'sections.page.parent.id'
  | 'sections.page.sections'
  | 'sections.page.sections.children'
  | 'sections.page.sections.components'
  | 'sections.page.sections.contentful_id'
  | 'sections.page.sections.createdAt'
  | 'sections.page.sections.heading'
  | 'sections.page.sections.id'
  | 'sections.page.sections.node_locale'
  | 'sections.page.sections.page'
  | 'sections.page.sections.slug'
  | 'sections.page.sections.spaceId'
  | 'sections.page.sections.subheading'
  | 'sections.page.sections.title'
  | 'sections.page.sections.type'
  | 'sections.page.sections.updatedAt'
  | 'sections.page.slug'
  | 'sections.page.spaceId'
  | 'sections.page.subheading'
  | 'sections.page.sys.revision'
  | 'sections.page.sys.type'
  | 'sections.page.title'
  | 'sections.page.updatedAt'
  | 'sections.parent.children'
  | 'sections.parent.children.children'
  | 'sections.parent.children.id'
  | 'sections.parent.id'
  | 'sections.parent.internal.content'
  | 'sections.parent.internal.contentDigest'
  | 'sections.parent.internal.description'
  | 'sections.parent.internal.fieldOwners'
  | 'sections.parent.internal.ignoreType'
  | 'sections.parent.internal.mediaType'
  | 'sections.parent.internal.owner'
  | 'sections.parent.internal.type'
  | 'sections.parent.parent.children'
  | 'sections.parent.parent.id'
  | 'sections.slug'
  | 'sections.spaceId'
  | 'sections.subheading'
  | 'sections.sys.revision'
  | 'sections.sys.type'
  | 'sections.title'
  | 'sections.type'
  | 'sections.updatedAt'
  | 'slug'
  | 'spaceId'
  | 'subheading'
  | 'sys.contentType.sys.id'
  | 'sys.contentType.sys.linkType'
  | 'sys.contentType.sys.type'
  | 'sys.revision'
  | 'sys.type'
  | 'title'
  | 'updatedAt';

type ContentfulPageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  readonly heading: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly link: InputMaybe<ContentfulLinkFilterListInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly sections: InputMaybe<ContentfulSectionFilterListInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly subheading: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulPageSysFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type ContentfulPageFilterListInput = {
  readonly elemMatch: InputMaybe<ContentfulPageFilterInput>;
};

type ContentfulPageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulPageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulPageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulPage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulPageGroupConnection_distinctArgs = {
  field: ContentfulPageFieldsEnum;
};


type ContentfulPageGroupConnection_groupArgs = {
  field: ContentfulPageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulPageGroupConnection_maxArgs = {
  field: ContentfulPageFieldsEnum;
};


type ContentfulPageGroupConnection_minArgs = {
  field: ContentfulPageFieldsEnum;
};


type ContentfulPageGroupConnection_sumArgs = {
  field: ContentfulPageFieldsEnum;
};

type ContentfulPageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ContentfulPageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ContentfulPageSys = {
  readonly contentType: Maybe<ContentfulPageSysContentType>;
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulPageSysContentType = {
  readonly sys: Maybe<ContentfulPageSysContentTypeSys>;
};

type ContentfulPageSysContentTypeFilterInput = {
  readonly sys: InputMaybe<ContentfulPageSysContentTypeSysFilterInput>;
};

type ContentfulPageSysContentTypeSys = {
  readonly id: Maybe<Scalars['String']>;
  readonly linkType: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulPageSysContentTypeSysFilterInput = {
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly linkType: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulPageSysFilterInput = {
  readonly contentType: InputMaybe<ContentfulPageSysContentTypeFilterInput>;
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulReference = {
  readonly contentful_id: Scalars['String'];
  readonly id: Scalars['ID'];
};

type ContentfulSection = ContentfulEntry & ContentfulReference & Node & {
  readonly children: ReadonlyArray<Node>;
  readonly components: Maybe<ReadonlyArray<Maybe<ContentfulComponent>>>;
  readonly contentful_id: Scalars['String'];
  readonly createdAt: Maybe<Scalars['Date']>;
  readonly heading: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly node_locale: Scalars['String'];
  readonly page: Maybe<ReadonlyArray<Maybe<ContentfulPage>>>;
  readonly parent: Maybe<Node>;
  readonly slug: Maybe<Scalars['String']>;
  readonly spaceId: Maybe<Scalars['String']>;
  readonly subheading: Maybe<Scalars['String']>;
  readonly sys: Maybe<ContentfulSectionSys>;
  readonly title: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
  readonly updatedAt: Maybe<Scalars['Date']>;
};


type ContentfulSection_createdAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type ContentfulSection_updatedAtArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type ContentfulSectionConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulSectionEdge>;
  readonly group: ReadonlyArray<ContentfulSectionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulSection>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulSectionConnection_distinctArgs = {
  field: ContentfulSectionFieldsEnum;
};


type ContentfulSectionConnection_groupArgs = {
  field: ContentfulSectionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulSectionConnection_maxArgs = {
  field: ContentfulSectionFieldsEnum;
};


type ContentfulSectionConnection_minArgs = {
  field: ContentfulSectionFieldsEnum;
};


type ContentfulSectionConnection_sumArgs = {
  field: ContentfulSectionFieldsEnum;
};

type ContentfulSectionEdge = {
  readonly next: Maybe<ContentfulSection>;
  readonly node: ContentfulSection;
  readonly previous: Maybe<ContentfulSection>;
};

type ContentfulSectionFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'components'
  | 'components.children'
  | 'components.children.children'
  | 'components.children.children.children'
  | 'components.children.children.id'
  | 'components.children.id'
  | 'components.children.internal.content'
  | 'components.children.internal.contentDigest'
  | 'components.children.internal.description'
  | 'components.children.internal.fieldOwners'
  | 'components.children.internal.ignoreType'
  | 'components.children.internal.mediaType'
  | 'components.children.internal.owner'
  | 'components.children.internal.type'
  | 'components.children.parent.children'
  | 'components.children.parent.id'
  | 'components.contentful_id'
  | 'components.createdAt'
  | 'components.date'
  | 'components.heading'
  | 'components.id'
  | 'components.image.altText'
  | 'components.image.asset.children'
  | 'components.image.asset.contentful_id'
  | 'components.image.asset.createdAt'
  | 'components.image.asset.description'
  | 'components.image.asset.filename'
  | 'components.image.asset.filesize'
  | 'components.image.asset.gatsbyImage'
  | 'components.image.asset.gatsbyImageData'
  | 'components.image.asset.height'
  | 'components.image.asset.id'
  | 'components.image.asset.mimeType'
  | 'components.image.asset.node_locale'
  | 'components.image.asset.placeholderUrl'
  | 'components.image.asset.publicUrl'
  | 'components.image.asset.size'
  | 'components.image.asset.spaceId'
  | 'components.image.asset.title'
  | 'components.image.asset.updatedAt'
  | 'components.image.asset.url'
  | 'components.image.asset.width'
  | 'components.image.caption'
  | 'components.image.children'
  | 'components.image.children.children'
  | 'components.image.children.id'
  | 'components.image.component'
  | 'components.image.component.children'
  | 'components.image.component.contentful_id'
  | 'components.image.component.createdAt'
  | 'components.image.component.date'
  | 'components.image.component.heading'
  | 'components.image.component.id'
  | 'components.image.component.label'
  | 'components.image.component.links'
  | 'components.image.component.namedStrings'
  | 'components.image.component.node_locale'
  | 'components.image.component.section'
  | 'components.image.component.slug'
  | 'components.image.component.spaceId'
  | 'components.image.component.subheading'
  | 'components.image.component.title'
  | 'components.image.component.updatedAt'
  | 'components.image.contentful_id'
  | 'components.image.createdAt'
  | 'components.image.id'
  | 'components.image.internal.content'
  | 'components.image.internal.contentDigest'
  | 'components.image.internal.description'
  | 'components.image.internal.fieldOwners'
  | 'components.image.internal.ignoreType'
  | 'components.image.internal.mediaType'
  | 'components.image.internal.owner'
  | 'components.image.internal.type'
  | 'components.image.node_locale'
  | 'components.image.parent.children'
  | 'components.image.parent.id'
  | 'components.image.spaceId'
  | 'components.image.sys.revision'
  | 'components.image.sys.type'
  | 'components.image.updatedAt'
  | 'components.internal.content'
  | 'components.internal.contentDigest'
  | 'components.internal.description'
  | 'components.internal.fieldOwners'
  | 'components.internal.ignoreType'
  | 'components.internal.mediaType'
  | 'components.internal.owner'
  | 'components.internal.type'
  | 'components.label'
  | 'components.links'
  | 'components.links.children'
  | 'components.links.children.children'
  | 'components.links.children.id'
  | 'components.links.component'
  | 'components.links.component.children'
  | 'components.links.component.contentful_id'
  | 'components.links.component.createdAt'
  | 'components.links.component.date'
  | 'components.links.component.heading'
  | 'components.links.component.id'
  | 'components.links.component.label'
  | 'components.links.component.links'
  | 'components.links.component.namedStrings'
  | 'components.links.component.node_locale'
  | 'components.links.component.section'
  | 'components.links.component.slug'
  | 'components.links.component.spaceId'
  | 'components.links.component.subheading'
  | 'components.links.component.title'
  | 'components.links.component.updatedAt'
  | 'components.links.contentful_id'
  | 'components.links.createdAt'
  | 'components.links.id'
  | 'components.links.internal.content'
  | 'components.links.internal.contentDigest'
  | 'components.links.internal.description'
  | 'components.links.internal.fieldOwners'
  | 'components.links.internal.ignoreType'
  | 'components.links.internal.mediaType'
  | 'components.links.internal.owner'
  | 'components.links.internal.type'
  | 'components.links.label'
  | 'components.links.node_locale'
  | 'components.links.parent.children'
  | 'components.links.parent.id'
  | 'components.links.ref.children'
  | 'components.links.ref.contentful_id'
  | 'components.links.ref.createdAt'
  | 'components.links.ref.gatsbyPath'
  | 'components.links.ref.heading'
  | 'components.links.ref.id'
  | 'components.links.ref.link'
  | 'components.links.ref.node_locale'
  | 'components.links.ref.sections'
  | 'components.links.ref.slug'
  | 'components.links.ref.spaceId'
  | 'components.links.ref.subheading'
  | 'components.links.ref.title'
  | 'components.links.ref.updatedAt'
  | 'components.links.slug'
  | 'components.links.spaceId'
  | 'components.links.sys.revision'
  | 'components.links.sys.type'
  | 'components.links.title'
  | 'components.links.updatedAt'
  | 'components.namedStrings'
  | 'components.namedStrings.children'
  | 'components.namedStrings.children.children'
  | 'components.namedStrings.children.id'
  | 'components.namedStrings.component'
  | 'components.namedStrings.component.children'
  | 'components.namedStrings.component.contentful_id'
  | 'components.namedStrings.component.createdAt'
  | 'components.namedStrings.component.date'
  | 'components.namedStrings.component.heading'
  | 'components.namedStrings.component.id'
  | 'components.namedStrings.component.label'
  | 'components.namedStrings.component.links'
  | 'components.namedStrings.component.namedStrings'
  | 'components.namedStrings.component.node_locale'
  | 'components.namedStrings.component.section'
  | 'components.namedStrings.component.slug'
  | 'components.namedStrings.component.spaceId'
  | 'components.namedStrings.component.subheading'
  | 'components.namedStrings.component.title'
  | 'components.namedStrings.component.updatedAt'
  | 'components.namedStrings.contentful_id'
  | 'components.namedStrings.createdAt'
  | 'components.namedStrings.id'
  | 'components.namedStrings.internal.content'
  | 'components.namedStrings.internal.contentDigest'
  | 'components.namedStrings.internal.description'
  | 'components.namedStrings.internal.fieldOwners'
  | 'components.namedStrings.internal.ignoreType'
  | 'components.namedStrings.internal.mediaType'
  | 'components.namedStrings.internal.owner'
  | 'components.namedStrings.internal.type'
  | 'components.namedStrings.name'
  | 'components.namedStrings.node_locale'
  | 'components.namedStrings.parent.children'
  | 'components.namedStrings.parent.id'
  | 'components.namedStrings.spaceId'
  | 'components.namedStrings.sys.revision'
  | 'components.namedStrings.sys.type'
  | 'components.namedStrings.updatedAt'
  | 'components.namedStrings.value'
  | 'components.node_locale'
  | 'components.parent.children'
  | 'components.parent.children.children'
  | 'components.parent.children.id'
  | 'components.parent.id'
  | 'components.parent.internal.content'
  | 'components.parent.internal.contentDigest'
  | 'components.parent.internal.description'
  | 'components.parent.internal.fieldOwners'
  | 'components.parent.internal.ignoreType'
  | 'components.parent.internal.mediaType'
  | 'components.parent.internal.owner'
  | 'components.parent.internal.type'
  | 'components.parent.parent.children'
  | 'components.parent.parent.id'
  | 'components.richText.raw'
  | 'components.richText.references'
  | 'components.richText.references.children'
  | 'components.richText.references.contentful_id'
  | 'components.richText.references.createdAt'
  | 'components.richText.references.gatsbyPath'
  | 'components.richText.references.heading'
  | 'components.richText.references.id'
  | 'components.richText.references.link'
  | 'components.richText.references.node_locale'
  | 'components.richText.references.sections'
  | 'components.richText.references.slug'
  | 'components.richText.references.spaceId'
  | 'components.richText.references.subheading'
  | 'components.richText.references.title'
  | 'components.richText.references.updatedAt'
  | 'components.section'
  | 'components.section.children'
  | 'components.section.children.children'
  | 'components.section.children.id'
  | 'components.section.components'
  | 'components.section.components.children'
  | 'components.section.components.contentful_id'
  | 'components.section.components.createdAt'
  | 'components.section.components.date'
  | 'components.section.components.heading'
  | 'components.section.components.id'
  | 'components.section.components.label'
  | 'components.section.components.links'
  | 'components.section.components.namedStrings'
  | 'components.section.components.node_locale'
  | 'components.section.components.section'
  | 'components.section.components.slug'
  | 'components.section.components.spaceId'
  | 'components.section.components.subheading'
  | 'components.section.components.title'
  | 'components.section.components.updatedAt'
  | 'components.section.contentful_id'
  | 'components.section.createdAt'
  | 'components.section.heading'
  | 'components.section.id'
  | 'components.section.internal.content'
  | 'components.section.internal.contentDigest'
  | 'components.section.internal.description'
  | 'components.section.internal.fieldOwners'
  | 'components.section.internal.ignoreType'
  | 'components.section.internal.mediaType'
  | 'components.section.internal.owner'
  | 'components.section.internal.type'
  | 'components.section.node_locale'
  | 'components.section.page'
  | 'components.section.page.children'
  | 'components.section.page.contentful_id'
  | 'components.section.page.createdAt'
  | 'components.section.page.gatsbyPath'
  | 'components.section.page.heading'
  | 'components.section.page.id'
  | 'components.section.page.link'
  | 'components.section.page.node_locale'
  | 'components.section.page.sections'
  | 'components.section.page.slug'
  | 'components.section.page.spaceId'
  | 'components.section.page.subheading'
  | 'components.section.page.title'
  | 'components.section.page.updatedAt'
  | 'components.section.parent.children'
  | 'components.section.parent.id'
  | 'components.section.slug'
  | 'components.section.spaceId'
  | 'components.section.subheading'
  | 'components.section.sys.revision'
  | 'components.section.sys.type'
  | 'components.section.title'
  | 'components.section.type'
  | 'components.section.updatedAt'
  | 'components.slug'
  | 'components.spaceId'
  | 'components.subheading'
  | 'components.sys.revision'
  | 'components.sys.type'
  | 'components.title'
  | 'components.updatedAt'
  | 'contentful_id'
  | 'createdAt'
  | 'heading'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'node_locale'
  | 'page'
  | 'page.children'
  | 'page.children.children'
  | 'page.children.children.children'
  | 'page.children.children.id'
  | 'page.children.id'
  | 'page.children.internal.content'
  | 'page.children.internal.contentDigest'
  | 'page.children.internal.description'
  | 'page.children.internal.fieldOwners'
  | 'page.children.internal.ignoreType'
  | 'page.children.internal.mediaType'
  | 'page.children.internal.owner'
  | 'page.children.internal.type'
  | 'page.children.parent.children'
  | 'page.children.parent.id'
  | 'page.contentful_id'
  | 'page.createdAt'
  | 'page.gatsbyPath'
  | 'page.heading'
  | 'page.id'
  | 'page.internal.content'
  | 'page.internal.contentDigest'
  | 'page.internal.description'
  | 'page.internal.fieldOwners'
  | 'page.internal.ignoreType'
  | 'page.internal.mediaType'
  | 'page.internal.owner'
  | 'page.internal.type'
  | 'page.link'
  | 'page.link.children'
  | 'page.link.children.children'
  | 'page.link.children.id'
  | 'page.link.component'
  | 'page.link.component.children'
  | 'page.link.component.contentful_id'
  | 'page.link.component.createdAt'
  | 'page.link.component.date'
  | 'page.link.component.heading'
  | 'page.link.component.id'
  | 'page.link.component.label'
  | 'page.link.component.links'
  | 'page.link.component.namedStrings'
  | 'page.link.component.node_locale'
  | 'page.link.component.section'
  | 'page.link.component.slug'
  | 'page.link.component.spaceId'
  | 'page.link.component.subheading'
  | 'page.link.component.title'
  | 'page.link.component.updatedAt'
  | 'page.link.contentful_id'
  | 'page.link.createdAt'
  | 'page.link.id'
  | 'page.link.internal.content'
  | 'page.link.internal.contentDigest'
  | 'page.link.internal.description'
  | 'page.link.internal.fieldOwners'
  | 'page.link.internal.ignoreType'
  | 'page.link.internal.mediaType'
  | 'page.link.internal.owner'
  | 'page.link.internal.type'
  | 'page.link.label'
  | 'page.link.node_locale'
  | 'page.link.parent.children'
  | 'page.link.parent.id'
  | 'page.link.ref.children'
  | 'page.link.ref.contentful_id'
  | 'page.link.ref.createdAt'
  | 'page.link.ref.gatsbyPath'
  | 'page.link.ref.heading'
  | 'page.link.ref.id'
  | 'page.link.ref.link'
  | 'page.link.ref.node_locale'
  | 'page.link.ref.sections'
  | 'page.link.ref.slug'
  | 'page.link.ref.spaceId'
  | 'page.link.ref.subheading'
  | 'page.link.ref.title'
  | 'page.link.ref.updatedAt'
  | 'page.link.slug'
  | 'page.link.spaceId'
  | 'page.link.sys.revision'
  | 'page.link.sys.type'
  | 'page.link.title'
  | 'page.link.updatedAt'
  | 'page.node_locale'
  | 'page.parent.children'
  | 'page.parent.children.children'
  | 'page.parent.children.id'
  | 'page.parent.id'
  | 'page.parent.internal.content'
  | 'page.parent.internal.contentDigest'
  | 'page.parent.internal.description'
  | 'page.parent.internal.fieldOwners'
  | 'page.parent.internal.ignoreType'
  | 'page.parent.internal.mediaType'
  | 'page.parent.internal.owner'
  | 'page.parent.internal.type'
  | 'page.parent.parent.children'
  | 'page.parent.parent.id'
  | 'page.sections'
  | 'page.sections.children'
  | 'page.sections.children.children'
  | 'page.sections.children.id'
  | 'page.sections.components'
  | 'page.sections.components.children'
  | 'page.sections.components.contentful_id'
  | 'page.sections.components.createdAt'
  | 'page.sections.components.date'
  | 'page.sections.components.heading'
  | 'page.sections.components.id'
  | 'page.sections.components.label'
  | 'page.sections.components.links'
  | 'page.sections.components.namedStrings'
  | 'page.sections.components.node_locale'
  | 'page.sections.components.section'
  | 'page.sections.components.slug'
  | 'page.sections.components.spaceId'
  | 'page.sections.components.subheading'
  | 'page.sections.components.title'
  | 'page.sections.components.updatedAt'
  | 'page.sections.contentful_id'
  | 'page.sections.createdAt'
  | 'page.sections.heading'
  | 'page.sections.id'
  | 'page.sections.internal.content'
  | 'page.sections.internal.contentDigest'
  | 'page.sections.internal.description'
  | 'page.sections.internal.fieldOwners'
  | 'page.sections.internal.ignoreType'
  | 'page.sections.internal.mediaType'
  | 'page.sections.internal.owner'
  | 'page.sections.internal.type'
  | 'page.sections.node_locale'
  | 'page.sections.page'
  | 'page.sections.page.children'
  | 'page.sections.page.contentful_id'
  | 'page.sections.page.createdAt'
  | 'page.sections.page.gatsbyPath'
  | 'page.sections.page.heading'
  | 'page.sections.page.id'
  | 'page.sections.page.link'
  | 'page.sections.page.node_locale'
  | 'page.sections.page.sections'
  | 'page.sections.page.slug'
  | 'page.sections.page.spaceId'
  | 'page.sections.page.subheading'
  | 'page.sections.page.title'
  | 'page.sections.page.updatedAt'
  | 'page.sections.parent.children'
  | 'page.sections.parent.id'
  | 'page.sections.slug'
  | 'page.sections.spaceId'
  | 'page.sections.subheading'
  | 'page.sections.sys.revision'
  | 'page.sections.sys.type'
  | 'page.sections.title'
  | 'page.sections.type'
  | 'page.sections.updatedAt'
  | 'page.slug'
  | 'page.spaceId'
  | 'page.subheading'
  | 'page.sys.revision'
  | 'page.sys.type'
  | 'page.title'
  | 'page.updatedAt'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'slug'
  | 'spaceId'
  | 'subheading'
  | 'sys.contentType.sys.id'
  | 'sys.contentType.sys.linkType'
  | 'sys.contentType.sys.type'
  | 'sys.revision'
  | 'sys.type'
  | 'title'
  | 'type'
  | 'updatedAt';

type ContentfulSectionFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly components: InputMaybe<ContentfulComponentFilterListInput>;
  readonly contentful_id: InputMaybe<StringQueryOperatorInput>;
  readonly createdAt: InputMaybe<DateQueryOperatorInput>;
  readonly heading: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly node_locale: InputMaybe<StringQueryOperatorInput>;
  readonly page: InputMaybe<ContentfulPageFilterListInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly slug: InputMaybe<StringQueryOperatorInput>;
  readonly spaceId: InputMaybe<StringQueryOperatorInput>;
  readonly subheading: InputMaybe<StringQueryOperatorInput>;
  readonly sys: InputMaybe<ContentfulSectionSysFilterInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
  readonly updatedAt: InputMaybe<DateQueryOperatorInput>;
};

type ContentfulSectionFilterListInput = {
  readonly elemMatch: InputMaybe<ContentfulSectionFilterInput>;
};

type ContentfulSectionGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ContentfulSectionEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ContentfulSectionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ContentfulSection>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ContentfulSectionGroupConnection_distinctArgs = {
  field: ContentfulSectionFieldsEnum;
};


type ContentfulSectionGroupConnection_groupArgs = {
  field: ContentfulSectionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ContentfulSectionGroupConnection_maxArgs = {
  field: ContentfulSectionFieldsEnum;
};


type ContentfulSectionGroupConnection_minArgs = {
  field: ContentfulSectionFieldsEnum;
};


type ContentfulSectionGroupConnection_sumArgs = {
  field: ContentfulSectionFieldsEnum;
};

type ContentfulSectionSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ContentfulSectionFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type ContentfulSectionSys = {
  readonly contentType: Maybe<ContentfulSectionSysContentType>;
  readonly revision: Maybe<Scalars['Int']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulSectionSysContentType = {
  readonly sys: Maybe<ContentfulSectionSysContentTypeSys>;
};

type ContentfulSectionSysContentTypeFilterInput = {
  readonly sys: InputMaybe<ContentfulSectionSysContentTypeSysFilterInput>;
};

type ContentfulSectionSysContentTypeSys = {
  readonly id: Maybe<Scalars['String']>;
  readonly linkType: Maybe<Scalars['String']>;
  readonly type: Maybe<Scalars['String']>;
};

type ContentfulSectionSysContentTypeSysFilterInput = {
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly linkType: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type ContentfulSectionSysFilterInput = {
  readonly contentType: InputMaybe<ContentfulSectionSysContentTypeFilterInput>;
  readonly revision: InputMaybe<IntQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type DateQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Date']>;
  readonly gt: InputMaybe<Scalars['Date']>;
  readonly gte: InputMaybe<Scalars['Date']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
  readonly lt: InputMaybe<Scalars['Date']>;
  readonly lte: InputMaybe<Scalars['Date']>;
  readonly ne: InputMaybe<Scalars['Date']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Date']>>>;
};

type Directory = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly changeTime: Scalars['Date'];
  readonly children: ReadonlyArray<Node>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type Directory_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type Directory_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type DirectoryConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectoryEdge = {
  readonly next: Maybe<Directory>;
  readonly node: Directory;
  readonly previous: Maybe<Directory>;
};

type DirectoryFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'changeTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid';

type DirectoryFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type DirectoryGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<DirectoryEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<DirectoryGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Directory>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type DirectoryGroupConnection_distinctArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_groupArgs = {
  field: DirectoryFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type DirectoryGroupConnection_maxArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_minArgs = {
  field: DirectoryFieldsEnum;
};


type DirectoryGroupConnection_sumArgs = {
  field: DirectoryFieldsEnum;
};

type DirectorySortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<DirectoryFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type DuotoneGradient = {
  readonly highlight: Scalars['String'];
  readonly opacity: InputMaybe<Scalars['Int']>;
  readonly shadow: Scalars['String'];
};

type File = Node & {
  readonly absolutePath: Scalars['String'];
  readonly accessTime: Scalars['Date'];
  readonly atime: Scalars['Date'];
  readonly atimeMs: Scalars['Float'];
  readonly base: Scalars['String'];
  readonly birthTime: Scalars['Date'];
  /** @deprecated Use `birthTime` instead */
  readonly birthtime: Maybe<Scalars['Date']>;
  /** @deprecated Use `birthTime` instead */
  readonly birthtimeMs: Maybe<Scalars['Float']>;
  readonly blksize: Maybe<Scalars['Int']>;
  readonly blocks: Maybe<Scalars['Int']>;
  readonly changeTime: Scalars['Date'];
  /** Returns the first child node of type ImageSharp or null if there are no children of given type on this node */
  readonly childImageSharp: Maybe<ImageSharp>;
  readonly children: ReadonlyArray<Node>;
  /** Returns all children nodes filtered by type ImageSharp */
  readonly childrenImageSharp: Maybe<ReadonlyArray<Maybe<ImageSharp>>>;
  readonly ctime: Scalars['Date'];
  readonly ctimeMs: Scalars['Float'];
  readonly dev: Scalars['Int'];
  readonly dir: Scalars['String'];
  readonly ext: Scalars['String'];
  readonly extension: Scalars['String'];
  readonly gid: Scalars['Int'];
  readonly id: Scalars['ID'];
  readonly ino: Scalars['Float'];
  readonly internal: Internal;
  readonly mode: Scalars['Int'];
  readonly modifiedTime: Scalars['Date'];
  readonly mtime: Scalars['Date'];
  readonly mtimeMs: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly nlink: Scalars['Int'];
  readonly parent: Maybe<Node>;
  readonly prettySize: Scalars['String'];
  /** Copy file to static directory and return public url to it */
  readonly publicURL: Maybe<Scalars['String']>;
  readonly rdev: Scalars['Int'];
  readonly relativeDirectory: Scalars['String'];
  readonly relativePath: Scalars['String'];
  readonly root: Scalars['String'];
  readonly size: Scalars['Int'];
  readonly sourceInstanceName: Scalars['String'];
  readonly uid: Scalars['Int'];
};


type File_accessTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_atimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_birthTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_changeTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_ctimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_modifiedTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};


type File_mtimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type FileConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileEdge = {
  readonly next: Maybe<File>;
  readonly node: File;
  readonly previous: Maybe<File>;
};

type FileFieldsEnum =
  | 'absolutePath'
  | 'accessTime'
  | 'atime'
  | 'atimeMs'
  | 'base'
  | 'birthTime'
  | 'birthtime'
  | 'birthtimeMs'
  | 'blksize'
  | 'blocks'
  | 'changeTime'
  | 'childImageSharp.children'
  | 'childImageSharp.children.children'
  | 'childImageSharp.children.children.children'
  | 'childImageSharp.children.children.id'
  | 'childImageSharp.children.id'
  | 'childImageSharp.children.internal.content'
  | 'childImageSharp.children.internal.contentDigest'
  | 'childImageSharp.children.internal.description'
  | 'childImageSharp.children.internal.fieldOwners'
  | 'childImageSharp.children.internal.ignoreType'
  | 'childImageSharp.children.internal.mediaType'
  | 'childImageSharp.children.internal.owner'
  | 'childImageSharp.children.internal.type'
  | 'childImageSharp.children.parent.children'
  | 'childImageSharp.children.parent.id'
  | 'childImageSharp.fixed.aspectRatio'
  | 'childImageSharp.fixed.base64'
  | 'childImageSharp.fixed.height'
  | 'childImageSharp.fixed.originalName'
  | 'childImageSharp.fixed.src'
  | 'childImageSharp.fixed.srcSet'
  | 'childImageSharp.fixed.srcSetWebp'
  | 'childImageSharp.fixed.srcWebp'
  | 'childImageSharp.fixed.tracedSVG'
  | 'childImageSharp.fixed.width'
  | 'childImageSharp.fluid.aspectRatio'
  | 'childImageSharp.fluid.base64'
  | 'childImageSharp.fluid.originalImg'
  | 'childImageSharp.fluid.originalName'
  | 'childImageSharp.fluid.presentationHeight'
  | 'childImageSharp.fluid.presentationWidth'
  | 'childImageSharp.fluid.sizes'
  | 'childImageSharp.fluid.src'
  | 'childImageSharp.fluid.srcSet'
  | 'childImageSharp.fluid.srcSetWebp'
  | 'childImageSharp.fluid.srcWebp'
  | 'childImageSharp.fluid.tracedSVG'
  | 'childImageSharp.gatsbyImageData'
  | 'childImageSharp.id'
  | 'childImageSharp.internal.content'
  | 'childImageSharp.internal.contentDigest'
  | 'childImageSharp.internal.description'
  | 'childImageSharp.internal.fieldOwners'
  | 'childImageSharp.internal.ignoreType'
  | 'childImageSharp.internal.mediaType'
  | 'childImageSharp.internal.owner'
  | 'childImageSharp.internal.type'
  | 'childImageSharp.original.height'
  | 'childImageSharp.original.src'
  | 'childImageSharp.original.width'
  | 'childImageSharp.parent.children'
  | 'childImageSharp.parent.children.children'
  | 'childImageSharp.parent.children.id'
  | 'childImageSharp.parent.id'
  | 'childImageSharp.parent.internal.content'
  | 'childImageSharp.parent.internal.contentDigest'
  | 'childImageSharp.parent.internal.description'
  | 'childImageSharp.parent.internal.fieldOwners'
  | 'childImageSharp.parent.internal.ignoreType'
  | 'childImageSharp.parent.internal.mediaType'
  | 'childImageSharp.parent.internal.owner'
  | 'childImageSharp.parent.internal.type'
  | 'childImageSharp.parent.parent.children'
  | 'childImageSharp.parent.parent.id'
  | 'childImageSharp.resize.aspectRatio'
  | 'childImageSharp.resize.height'
  | 'childImageSharp.resize.originalName'
  | 'childImageSharp.resize.src'
  | 'childImageSharp.resize.tracedSVG'
  | 'childImageSharp.resize.width'
  | 'children'
  | 'childrenImageSharp'
  | 'childrenImageSharp.children'
  | 'childrenImageSharp.children.children'
  | 'childrenImageSharp.children.children.children'
  | 'childrenImageSharp.children.children.id'
  | 'childrenImageSharp.children.id'
  | 'childrenImageSharp.children.internal.content'
  | 'childrenImageSharp.children.internal.contentDigest'
  | 'childrenImageSharp.children.internal.description'
  | 'childrenImageSharp.children.internal.fieldOwners'
  | 'childrenImageSharp.children.internal.ignoreType'
  | 'childrenImageSharp.children.internal.mediaType'
  | 'childrenImageSharp.children.internal.owner'
  | 'childrenImageSharp.children.internal.type'
  | 'childrenImageSharp.children.parent.children'
  | 'childrenImageSharp.children.parent.id'
  | 'childrenImageSharp.fixed.aspectRatio'
  | 'childrenImageSharp.fixed.base64'
  | 'childrenImageSharp.fixed.height'
  | 'childrenImageSharp.fixed.originalName'
  | 'childrenImageSharp.fixed.src'
  | 'childrenImageSharp.fixed.srcSet'
  | 'childrenImageSharp.fixed.srcSetWebp'
  | 'childrenImageSharp.fixed.srcWebp'
  | 'childrenImageSharp.fixed.tracedSVG'
  | 'childrenImageSharp.fixed.width'
  | 'childrenImageSharp.fluid.aspectRatio'
  | 'childrenImageSharp.fluid.base64'
  | 'childrenImageSharp.fluid.originalImg'
  | 'childrenImageSharp.fluid.originalName'
  | 'childrenImageSharp.fluid.presentationHeight'
  | 'childrenImageSharp.fluid.presentationWidth'
  | 'childrenImageSharp.fluid.sizes'
  | 'childrenImageSharp.fluid.src'
  | 'childrenImageSharp.fluid.srcSet'
  | 'childrenImageSharp.fluid.srcSetWebp'
  | 'childrenImageSharp.fluid.srcWebp'
  | 'childrenImageSharp.fluid.tracedSVG'
  | 'childrenImageSharp.gatsbyImageData'
  | 'childrenImageSharp.id'
  | 'childrenImageSharp.internal.content'
  | 'childrenImageSharp.internal.contentDigest'
  | 'childrenImageSharp.internal.description'
  | 'childrenImageSharp.internal.fieldOwners'
  | 'childrenImageSharp.internal.ignoreType'
  | 'childrenImageSharp.internal.mediaType'
  | 'childrenImageSharp.internal.owner'
  | 'childrenImageSharp.internal.type'
  | 'childrenImageSharp.original.height'
  | 'childrenImageSharp.original.src'
  | 'childrenImageSharp.original.width'
  | 'childrenImageSharp.parent.children'
  | 'childrenImageSharp.parent.children.children'
  | 'childrenImageSharp.parent.children.id'
  | 'childrenImageSharp.parent.id'
  | 'childrenImageSharp.parent.internal.content'
  | 'childrenImageSharp.parent.internal.contentDigest'
  | 'childrenImageSharp.parent.internal.description'
  | 'childrenImageSharp.parent.internal.fieldOwners'
  | 'childrenImageSharp.parent.internal.ignoreType'
  | 'childrenImageSharp.parent.internal.mediaType'
  | 'childrenImageSharp.parent.internal.owner'
  | 'childrenImageSharp.parent.internal.type'
  | 'childrenImageSharp.parent.parent.children'
  | 'childrenImageSharp.parent.parent.id'
  | 'childrenImageSharp.resize.aspectRatio'
  | 'childrenImageSharp.resize.height'
  | 'childrenImageSharp.resize.originalName'
  | 'childrenImageSharp.resize.src'
  | 'childrenImageSharp.resize.tracedSVG'
  | 'childrenImageSharp.resize.width'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'ctime'
  | 'ctimeMs'
  | 'dev'
  | 'dir'
  | 'ext'
  | 'extension'
  | 'gid'
  | 'id'
  | 'ino'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'mode'
  | 'modifiedTime'
  | 'mtime'
  | 'mtimeMs'
  | 'name'
  | 'nlink'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'prettySize'
  | 'publicURL'
  | 'rdev'
  | 'relativeDirectory'
  | 'relativePath'
  | 'root'
  | 'size'
  | 'sourceInstanceName'
  | 'uid';

type FileFilterInput = {
  readonly absolutePath: InputMaybe<StringQueryOperatorInput>;
  readonly accessTime: InputMaybe<DateQueryOperatorInput>;
  readonly atime: InputMaybe<DateQueryOperatorInput>;
  readonly atimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly base: InputMaybe<StringQueryOperatorInput>;
  readonly birthTime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtime: InputMaybe<DateQueryOperatorInput>;
  readonly birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly blksize: InputMaybe<IntQueryOperatorInput>;
  readonly blocks: InputMaybe<IntQueryOperatorInput>;
  readonly changeTime: InputMaybe<DateQueryOperatorInput>;
  readonly childImageSharp: InputMaybe<ImageSharpFilterInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  readonly ctime: InputMaybe<DateQueryOperatorInput>;
  readonly ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly dev: InputMaybe<IntQueryOperatorInput>;
  readonly dir: InputMaybe<StringQueryOperatorInput>;
  readonly ext: InputMaybe<StringQueryOperatorInput>;
  readonly extension: InputMaybe<StringQueryOperatorInput>;
  readonly gid: InputMaybe<IntQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly ino: InputMaybe<FloatQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly mode: InputMaybe<IntQueryOperatorInput>;
  readonly modifiedTime: InputMaybe<DateQueryOperatorInput>;
  readonly mtime: InputMaybe<DateQueryOperatorInput>;
  readonly mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nlink: InputMaybe<IntQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly prettySize: InputMaybe<StringQueryOperatorInput>;
  readonly publicURL: InputMaybe<StringQueryOperatorInput>;
  readonly rdev: InputMaybe<IntQueryOperatorInput>;
  readonly relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  readonly relativePath: InputMaybe<StringQueryOperatorInput>;
  readonly root: InputMaybe<StringQueryOperatorInput>;
  readonly size: InputMaybe<IntQueryOperatorInput>;
  readonly sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  readonly uid: InputMaybe<IntQueryOperatorInput>;
};

type FileGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<FileEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<FileGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<File>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type FileGroupConnection_distinctArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_groupArgs = {
  field: FileFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type FileGroupConnection_maxArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_minArgs = {
  field: FileFieldsEnum;
};


type FileGroupConnection_sumArgs = {
  field: FileFieldsEnum;
};

type FileSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<FileFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type FloatQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Float']>;
  readonly gt: InputMaybe<Scalars['Float']>;
  readonly gte: InputMaybe<Scalars['Float']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  readonly lt: InputMaybe<Scalars['Float']>;
  readonly lte: InputMaybe<Scalars['Float']>;
  readonly ne: InputMaybe<Scalars['Float']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
};

type GatsbyImageDataQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['GatsbyImageData']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
  readonly ne: InputMaybe<Scalars['GatsbyImageData']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['GatsbyImageData']>>>;
};

type GatsbyImageFormat =
  | 'auto'
  | 'avif'
  | 'jpg'
  | 'NO_CHANGE'
  | 'png'
  | 'webp';

type GatsbyImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type GatsbyImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageCropFocus =
  | 17
  | 'CENTER'
  | 2
  | 16
  | 1
  | 5
  | 8
  | 3
  | 6
  | 7
  | 4;

type ImageFit =
  | 'contain'
  | 'cover'
  | 'fill'
  | 'inside'
  | 'outside';

type ImageFormat =
  | 'AUTO'
  | 'avif'
  | 'jpg'
  | 'NO_CHANGE'
  | 'png'
  | 'webp';

type ImageLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type ImagePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type ImageResizingBehavior =
  /** Crop a part of the original image to match the specified size. */
  | 'crop'
  /** Crop the image to the specified dimensions, if the original image is smaller than these dimensions, then the image will be upscaled. */
  | 'fill'
  | 'NO_CHANGE'
  /** Same as the default resizing, but adds padding so that the generated image has the specified dimensions. */
  | 'pad'
  /** Scale the image regardless of the original aspect ratio. */
  | 'scale'
  /** When used in association with the f parameter below, creates a thumbnail from the image based on a focus area. */
  | 'thumb';

type ImageSharp = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly fixed: Maybe<ImageSharpFixed>;
  readonly fluid: Maybe<ImageSharpFluid>;
  readonly gatsbyImageData: Scalars['GatsbyImageData'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly original: Maybe<ImageSharpOriginal>;
  readonly parent: Maybe<Node>;
  readonly resize: Maybe<ImageSharpResize>;
};


type ImageSharp_fixedArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_fluidArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64Width: InputMaybe<Scalars['Int']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  maxHeight: InputMaybe<Scalars['Int']>;
  maxWidth: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  sizes?: InputMaybe<Scalars['String']>;
  srcSetBreakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  toFormat?: InputMaybe<ImageFormat>;
  toFormatBase64?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
};


type ImageSharp_gatsbyImageDataArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  avifOptions: InputMaybe<AVIFOptions>;
  backgroundColor: InputMaybe<Scalars['String']>;
  blurredOptions: InputMaybe<BlurredOptions>;
  breakpoints: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  formats: InputMaybe<ReadonlyArray<InputMaybe<ImageFormat>>>;
  height: InputMaybe<Scalars['Int']>;
  jpgOptions: InputMaybe<JPGOptions>;
  layout?: InputMaybe<ImageLayout>;
  outputPixelDensities: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder: InputMaybe<ImagePlaceholder>;
  pngOptions: InputMaybe<PNGOptions>;
  quality: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  tracedSVGOptions: InputMaybe<Potrace>;
  transformOptions: InputMaybe<TransformOptions>;
  webpOptions: InputMaybe<WebPOptions>;
  width: InputMaybe<Scalars['Int']>;
};


type ImageSharp_resizeArgs = {
  background?: InputMaybe<Scalars['String']>;
  base64?: InputMaybe<Scalars['Boolean']>;
  cropFocus?: InputMaybe<ImageCropFocus>;
  duotone: InputMaybe<DuotoneGradient>;
  fit?: InputMaybe<ImageFit>;
  grayscale?: InputMaybe<Scalars['Boolean']>;
  height: InputMaybe<Scalars['Int']>;
  jpegProgressive?: InputMaybe<Scalars['Boolean']>;
  jpegQuality: InputMaybe<Scalars['Int']>;
  pngCompressionLevel?: InputMaybe<Scalars['Int']>;
  pngCompressionSpeed?: InputMaybe<Scalars['Int']>;
  pngQuality: InputMaybe<Scalars['Int']>;
  quality: InputMaybe<Scalars['Int']>;
  rotate?: InputMaybe<Scalars['Int']>;
  toFormat?: InputMaybe<ImageFormat>;
  traceSVG: InputMaybe<Potrace>;
  trim?: InputMaybe<Scalars['Float']>;
  webpQuality: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};

type ImageSharpConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpEdge = {
  readonly next: Maybe<ImageSharp>;
  readonly node: ImageSharp;
  readonly previous: Maybe<ImageSharp>;
};

type ImageSharpFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'fixed.aspectRatio'
  | 'fixed.base64'
  | 'fixed.height'
  | 'fixed.originalName'
  | 'fixed.src'
  | 'fixed.srcSet'
  | 'fixed.srcSetWebp'
  | 'fixed.srcWebp'
  | 'fixed.tracedSVG'
  | 'fixed.width'
  | 'fluid.aspectRatio'
  | 'fluid.base64'
  | 'fluid.originalImg'
  | 'fluid.originalName'
  | 'fluid.presentationHeight'
  | 'fluid.presentationWidth'
  | 'fluid.sizes'
  | 'fluid.src'
  | 'fluid.srcSet'
  | 'fluid.srcSetWebp'
  | 'fluid.srcWebp'
  | 'fluid.tracedSVG'
  | 'gatsbyImageData'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'original.height'
  | 'original.src'
  | 'original.width'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'resize.aspectRatio'
  | 'resize.height'
  | 'resize.originalName'
  | 'resize.src'
  | 'resize.tracedSVG'
  | 'resize.width';

type ImageSharpFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly fixed: InputMaybe<ImageSharpFixedFilterInput>;
  readonly fluid: InputMaybe<ImageSharpFluidFilterInput>;
  readonly gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly original: InputMaybe<ImageSharpOriginalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly resize: InputMaybe<ImageSharpResizeFilterInput>;
};

type ImageSharpFilterListInput = {
  readonly elemMatch: InputMaybe<ImageSharpFilterInput>;
};

type ImageSharpFixed = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly base64: Maybe<Scalars['String']>;
  readonly height: Scalars['Float'];
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Scalars['Float'];
};

type ImageSharpFixedFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpFluid = {
  readonly aspectRatio: Scalars['Float'];
  readonly base64: Maybe<Scalars['String']>;
  readonly originalImg: Maybe<Scalars['String']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly presentationHeight: Scalars['Int'];
  readonly presentationWidth: Scalars['Int'];
  readonly sizes: Scalars['String'];
  readonly src: Scalars['String'];
  readonly srcSet: Scalars['String'];
  readonly srcSetWebp: Maybe<Scalars['String']>;
  readonly srcWebp: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
};

type ImageSharpFluidFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly base64: InputMaybe<StringQueryOperatorInput>;
  readonly originalImg: InputMaybe<StringQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly presentationHeight: InputMaybe<IntQueryOperatorInput>;
  readonly presentationWidth: InputMaybe<IntQueryOperatorInput>;
  readonly sizes: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly srcSet: InputMaybe<StringQueryOperatorInput>;
  readonly srcSetWebp: InputMaybe<StringQueryOperatorInput>;
  readonly srcWebp: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
};

type ImageSharpGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<ImageSharpEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<ImageSharpGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<ImageSharp>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type ImageSharpGroupConnection_distinctArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_groupArgs = {
  field: ImageSharpFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type ImageSharpGroupConnection_maxArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_minArgs = {
  field: ImageSharpFieldsEnum;
};


type ImageSharpGroupConnection_sumArgs = {
  field: ImageSharpFieldsEnum;
};

type ImageSharpOriginal = {
  readonly height: Maybe<Scalars['Float']>;
  readonly src: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Float']>;
};

type ImageSharpOriginalFilterInput = {
  readonly height: InputMaybe<FloatQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<FloatQueryOperatorInput>;
};

type ImageSharpResize = {
  readonly aspectRatio: Maybe<Scalars['Float']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly originalName: Maybe<Scalars['String']>;
  readonly src: Maybe<Scalars['String']>;
  readonly tracedSVG: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type ImageSharpResizeFilterInput = {
  readonly aspectRatio: InputMaybe<FloatQueryOperatorInput>;
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly originalName: InputMaybe<StringQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly tracedSVG: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type ImageSharpSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<ImageSharpFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type IntQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['Int']>;
  readonly gt: InputMaybe<Scalars['Int']>;
  readonly gte: InputMaybe<Scalars['Int']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  readonly lt: InputMaybe<Scalars['Int']>;
  readonly lte: InputMaybe<Scalars['Int']>;
  readonly ne: InputMaybe<Scalars['Int']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
};

type Internal = {
  readonly content: Maybe<Scalars['String']>;
  readonly contentDigest: Scalars['String'];
  readonly description: Maybe<Scalars['String']>;
  readonly fieldOwners: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly ignoreType: Maybe<Scalars['Boolean']>;
  readonly mediaType: Maybe<Scalars['String']>;
  readonly owner: Scalars['String'];
  readonly type: Scalars['String'];
};

type InternalFilterInput = {
  readonly content: InputMaybe<StringQueryOperatorInput>;
  readonly contentDigest: InputMaybe<StringQueryOperatorInput>;
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly fieldOwners: InputMaybe<StringQueryOperatorInput>;
  readonly ignoreType: InputMaybe<BooleanQueryOperatorInput>;
  readonly mediaType: InputMaybe<StringQueryOperatorInput>;
  readonly owner: InputMaybe<StringQueryOperatorInput>;
  readonly type: InputMaybe<StringQueryOperatorInput>;
};

type JPGOptions = {
  readonly progressive: InputMaybe<Scalars['Boolean']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type JSONQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['JSON']>;
  readonly glob: InputMaybe<Scalars['JSON']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly ne: InputMaybe<Scalars['JSON']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['JSON']>>>;
  readonly regex: InputMaybe<Scalars['JSON']>;
};

/** Node Interface */
type Node = {
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};

type NodeFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type NodeFilterListInput = {
  readonly elemMatch: InputMaybe<NodeFilterInput>;
};

type PNGOptions = {
  readonly compressionSpeed: InputMaybe<Scalars['Int']>;
  readonly quality: InputMaybe<Scalars['Int']>;
};

type PageInfo = {
  readonly currentPage: Scalars['Int'];
  readonly hasNextPage: Scalars['Boolean'];
  readonly hasPreviousPage: Scalars['Boolean'];
  readonly itemCount: Scalars['Int'];
  readonly pageCount: Scalars['Int'];
  readonly perPage: Maybe<Scalars['Int']>;
  readonly totalCount: Scalars['Int'];
};

type Potrace = {
  readonly alphaMax: InputMaybe<Scalars['Float']>;
  readonly background: InputMaybe<Scalars['String']>;
  readonly blackOnWhite: InputMaybe<Scalars['Boolean']>;
  readonly color: InputMaybe<Scalars['String']>;
  readonly optCurve: InputMaybe<Scalars['Boolean']>;
  readonly optTolerance: InputMaybe<Scalars['Float']>;
  readonly threshold: InputMaybe<Scalars['Int']>;
  readonly turdSize: InputMaybe<Scalars['Float']>;
  readonly turnPolicy: InputMaybe<PotraceTurnPolicy>;
};

type PotraceTurnPolicy =
  | 'black'
  | 'left'
  | 'majority'
  | 'minority'
  | 'right'
  | 'white';

type Query = {
  readonly allContentfulAsset: ContentfulAssetConnection;
  readonly allContentfulComponent: ContentfulComponentConnection;
  readonly allContentfulContentType: ContentfulContentTypeConnection;
  readonly allContentfulEntry: ContentfulEntryConnection;
  readonly allContentfulHero: ContentfulHeroConnection;
  readonly allContentfulImage: ContentfulImageConnection;
  readonly allContentfulLink: ContentfulLinkConnection;
  readonly allContentfulMenu: ContentfulMenuConnection;
  readonly allContentfulNameValuePair: ContentfulNameValuePairConnection;
  readonly allContentfulPage: ContentfulPageConnection;
  readonly allContentfulSection: ContentfulSectionConnection;
  readonly allDirectory: DirectoryConnection;
  readonly allFile: FileConnection;
  readonly allImageSharp: ImageSharpConnection;
  readonly allSite: SiteConnection;
  readonly allSiteBuildMetadata: SiteBuildMetadataConnection;
  readonly allSiteFunction: SiteFunctionConnection;
  readonly allSitePage: SitePageConnection;
  readonly allSitePlugin: SitePluginConnection;
  readonly contentfulAsset: Maybe<ContentfulAsset>;
  readonly contentfulComponent: Maybe<ContentfulComponent>;
  readonly contentfulContentType: Maybe<ContentfulContentType>;
  readonly contentfulEntry: Maybe<ContentfulEntry>;
  readonly contentfulHero: Maybe<ContentfulHero>;
  readonly contentfulImage: Maybe<ContentfulImage>;
  readonly contentfulLink: Maybe<ContentfulLink>;
  readonly contentfulMenu: Maybe<ContentfulMenu>;
  readonly contentfulNameValuePair: Maybe<ContentfulNameValuePair>;
  readonly contentfulPage: Maybe<ContentfulPage>;
  readonly contentfulSection: Maybe<ContentfulSection>;
  readonly directory: Maybe<Directory>;
  readonly file: Maybe<File>;
  readonly imageSharp: Maybe<ImageSharp>;
  readonly site: Maybe<Site>;
  readonly siteBuildMetadata: Maybe<SiteBuildMetadata>;
  readonly siteFunction: Maybe<SiteFunction>;
  readonly sitePage: Maybe<SitePage>;
  readonly sitePlugin: Maybe<SitePlugin>;
};


type Query_allContentfulAssetArgs = {
  filter: InputMaybe<ContentfulAssetFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ContentfulAssetSortInput>;
};


type Query_allContentfulComponentArgs = {
  filter: InputMaybe<ContentfulComponentFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ContentfulComponentSortInput>;
};


type Query_allContentfulContentTypeArgs = {
  filter: InputMaybe<ContentfulContentTypeFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ContentfulContentTypeSortInput>;
};


type Query_allContentfulEntryArgs = {
  filter: InputMaybe<ContentfulEntryFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ContentfulEntrySortInput>;
};


type Query_allContentfulHeroArgs = {
  filter: InputMaybe<ContentfulHeroFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ContentfulHeroSortInput>;
};


type Query_allContentfulImageArgs = {
  filter: InputMaybe<ContentfulImageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ContentfulImageSortInput>;
};


type Query_allContentfulLinkArgs = {
  filter: InputMaybe<ContentfulLinkFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ContentfulLinkSortInput>;
};


type Query_allContentfulMenuArgs = {
  filter: InputMaybe<ContentfulMenuFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ContentfulMenuSortInput>;
};


type Query_allContentfulNameValuePairArgs = {
  filter: InputMaybe<ContentfulNameValuePairFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ContentfulNameValuePairSortInput>;
};


type Query_allContentfulPageArgs = {
  filter: InputMaybe<ContentfulPageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ContentfulPageSortInput>;
};


type Query_allContentfulSectionArgs = {
  filter: InputMaybe<ContentfulSectionFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ContentfulSectionSortInput>;
};


type Query_allDirectoryArgs = {
  filter: InputMaybe<DirectoryFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<DirectorySortInput>;
};


type Query_allFileArgs = {
  filter: InputMaybe<FileFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<FileSortInput>;
};


type Query_allImageSharpArgs = {
  filter: InputMaybe<ImageSharpFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<ImageSharpSortInput>;
};


type Query_allSiteArgs = {
  filter: InputMaybe<SiteFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteSortInput>;
};


type Query_allSiteBuildMetadataArgs = {
  filter: InputMaybe<SiteBuildMetadataFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteBuildMetadataSortInput>;
};


type Query_allSiteFunctionArgs = {
  filter: InputMaybe<SiteFunctionFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SiteFunctionSortInput>;
};


type Query_allSitePageArgs = {
  filter: InputMaybe<SitePageFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePageSortInput>;
};


type Query_allSitePluginArgs = {
  filter: InputMaybe<SitePluginFilterInput>;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
  sort: InputMaybe<SitePluginSortInput>;
};


type Query_contentfulAssetArgs = {
  children: InputMaybe<NodeFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  file: InputMaybe<ContentfulAssetFileFilterInput>;
  filename: InputMaybe<StringQueryOperatorInput>;
  filesize: InputMaybe<IntQueryOperatorInput>;
  gatsbyImage: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  gatsbyImageData: InputMaybe<JSONQueryOperatorInput>;
  height: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mimeType: InputMaybe<StringQueryOperatorInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  placeholderUrl: InputMaybe<StringQueryOperatorInput>;
  publicUrl: InputMaybe<StringQueryOperatorInput>;
  resize: InputMaybe<RemoteFileResizeFilterInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulAssetSysFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
  url: InputMaybe<StringQueryOperatorInput>;
  width: InputMaybe<IntQueryOperatorInput>;
};


type Query_contentfulComponentArgs = {
  children: InputMaybe<NodeFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  date: InputMaybe<DateQueryOperatorInput>;
  heading: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  image: InputMaybe<ContentfulImageFilterInput>;
  internal: InputMaybe<InternalFilterInput>;
  label: InputMaybe<StringQueryOperatorInput>;
  links: InputMaybe<ContentfulLinkFilterListInput>;
  namedStrings: InputMaybe<ContentfulNameValuePairFilterListInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  richText: InputMaybe<ContentfulComponentRichTextFilterInput>;
  section: InputMaybe<ContentfulSectionFilterListInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  subheading: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulComponentSysFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_contentfulContentTypeArgs = {
  children: InputMaybe<NodeFilterListInput>;
  description: InputMaybe<StringQueryOperatorInput>;
  displayField: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  sys: InputMaybe<ContentfulContentTypeSysFilterInput>;
};


type Query_contentfulEntryArgs = {
  children: InputMaybe<NodeFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_contentfulHeroArgs = {
  children: InputMaybe<NodeFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_contentfulImageArgs = {
  altText: InputMaybe<StringQueryOperatorInput>;
  asset: InputMaybe<ContentfulAssetFilterInput>;
  caption: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  component: InputMaybe<ContentfulComponentFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulImageSysFilterInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_contentfulLinkArgs = {
  children: InputMaybe<NodeFilterListInput>;
  component: InputMaybe<ContentfulComponentFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  label: InputMaybe<StringQueryOperatorInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  ref: InputMaybe<ContentfulPageFilterInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulLinkSysFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_contentfulMenuArgs = {
  children: InputMaybe<NodeFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_contentfulNameValuePairArgs = {
  children: InputMaybe<NodeFilterListInput>;
  component: InputMaybe<ContentfulComponentFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulNameValuePairSysFilterInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
  value: InputMaybe<StringQueryOperatorInput>;
};


type Query_contentfulPageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  gatsbyPath: InputMaybe<StringQueryOperatorInput>;
  heading: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  link: InputMaybe<ContentfulLinkFilterListInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  sections: InputMaybe<ContentfulSectionFilterListInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  subheading: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulPageSysFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_contentfulSectionArgs = {
  children: InputMaybe<NodeFilterListInput>;
  components: InputMaybe<ContentfulComponentFilterListInput>;
  contentful_id: InputMaybe<StringQueryOperatorInput>;
  createdAt: InputMaybe<DateQueryOperatorInput>;
  heading: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  node_locale: InputMaybe<StringQueryOperatorInput>;
  page: InputMaybe<ContentfulPageFilterListInput>;
  parent: InputMaybe<NodeFilterInput>;
  slug: InputMaybe<StringQueryOperatorInput>;
  spaceId: InputMaybe<StringQueryOperatorInput>;
  subheading: InputMaybe<StringQueryOperatorInput>;
  sys: InputMaybe<ContentfulSectionSysFilterInput>;
  title: InputMaybe<StringQueryOperatorInput>;
  type: InputMaybe<StringQueryOperatorInput>;
  updatedAt: InputMaybe<DateQueryOperatorInput>;
};


type Query_directoryArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_fileArgs = {
  absolutePath: InputMaybe<StringQueryOperatorInput>;
  accessTime: InputMaybe<DateQueryOperatorInput>;
  atime: InputMaybe<DateQueryOperatorInput>;
  atimeMs: InputMaybe<FloatQueryOperatorInput>;
  base: InputMaybe<StringQueryOperatorInput>;
  birthTime: InputMaybe<DateQueryOperatorInput>;
  birthtime: InputMaybe<DateQueryOperatorInput>;
  birthtimeMs: InputMaybe<FloatQueryOperatorInput>;
  blksize: InputMaybe<IntQueryOperatorInput>;
  blocks: InputMaybe<IntQueryOperatorInput>;
  changeTime: InputMaybe<DateQueryOperatorInput>;
  childImageSharp: InputMaybe<ImageSharpFilterInput>;
  children: InputMaybe<NodeFilterListInput>;
  childrenImageSharp: InputMaybe<ImageSharpFilterListInput>;
  ctime: InputMaybe<DateQueryOperatorInput>;
  ctimeMs: InputMaybe<FloatQueryOperatorInput>;
  dev: InputMaybe<IntQueryOperatorInput>;
  dir: InputMaybe<StringQueryOperatorInput>;
  ext: InputMaybe<StringQueryOperatorInput>;
  extension: InputMaybe<StringQueryOperatorInput>;
  gid: InputMaybe<IntQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  ino: InputMaybe<FloatQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  mode: InputMaybe<IntQueryOperatorInput>;
  modifiedTime: InputMaybe<DateQueryOperatorInput>;
  mtime: InputMaybe<DateQueryOperatorInput>;
  mtimeMs: InputMaybe<FloatQueryOperatorInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nlink: InputMaybe<IntQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  prettySize: InputMaybe<StringQueryOperatorInput>;
  publicURL: InputMaybe<StringQueryOperatorInput>;
  rdev: InputMaybe<IntQueryOperatorInput>;
  relativeDirectory: InputMaybe<StringQueryOperatorInput>;
  relativePath: InputMaybe<StringQueryOperatorInput>;
  root: InputMaybe<StringQueryOperatorInput>;
  size: InputMaybe<IntQueryOperatorInput>;
  sourceInstanceName: InputMaybe<StringQueryOperatorInput>;
  uid: InputMaybe<IntQueryOperatorInput>;
};


type Query_imageSharpArgs = {
  children: InputMaybe<NodeFilterListInput>;
  fixed: InputMaybe<ImageSharpFixedFilterInput>;
  fluid: InputMaybe<ImageSharpFluidFilterInput>;
  gatsbyImageData: InputMaybe<GatsbyImageDataQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  original: InputMaybe<ImageSharpOriginalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
  resize: InputMaybe<ImageSharpResizeFilterInput>;
};


type Query_siteArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  graphqlTypegen: InputMaybe<BooleanQueryOperatorInput>;
  host: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pathPrefix: InputMaybe<StringQueryOperatorInput>;
  polyfill: InputMaybe<BooleanQueryOperatorInput>;
  port: InputMaybe<IntQueryOperatorInput>;
  siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  trailingSlash: InputMaybe<StringQueryOperatorInput>;
};


type Query_siteBuildMetadataArgs = {
  buildTime: InputMaybe<DateQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  parent: InputMaybe<NodeFilterInput>;
};


type Query_siteFunctionArgs = {
  absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  functionRoute: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginName: InputMaybe<StringQueryOperatorInput>;
  relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};


type Query_sitePageArgs = {
  children: InputMaybe<NodeFilterListInput>;
  component: InputMaybe<StringQueryOperatorInput>;
  componentChunkName: InputMaybe<StringQueryOperatorInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  internalComponentName: InputMaybe<StringQueryOperatorInput>;
  matchPath: InputMaybe<StringQueryOperatorInput>;
  pageContext: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  path: InputMaybe<StringQueryOperatorInput>;
  pluginCreator: InputMaybe<SitePluginFilterInput>;
};


type Query_sitePluginArgs = {
  browserAPIs: InputMaybe<StringQueryOperatorInput>;
  children: InputMaybe<NodeFilterListInput>;
  id: InputMaybe<StringQueryOperatorInput>;
  internal: InputMaybe<InternalFilterInput>;
  name: InputMaybe<StringQueryOperatorInput>;
  nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  packageJson: InputMaybe<JSONQueryOperatorInput>;
  parent: InputMaybe<NodeFilterInput>;
  pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  resolve: InputMaybe<StringQueryOperatorInput>;
  ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  version: InputMaybe<StringQueryOperatorInput>;
};

/** Remote Interface */
type RemoteFile = {
  readonly filename: Scalars['String'];
  readonly filesize: Maybe<Scalars['Int']>;
  /** Data used in the <GatsbyImage /> component. See https://gatsby.dev/img for more info. */
  readonly gatsbyImage: Maybe<Scalars['GatsbyImageData']>;
  readonly height: Maybe<Scalars['Int']>;
  readonly id: Scalars['ID'];
  readonly mimeType: Scalars['String'];
  readonly publicUrl: Scalars['String'];
  readonly resize: Maybe<RemoteFileResize>;
  readonly width: Maybe<Scalars['Int']>;
};


/** Remote Interface */
type RemoteFile_gatsbyImageArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  backgroundColor: InputMaybe<Scalars['String']>;
  breakpoints?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Int']>>>;
  cropFocus: InputMaybe<ReadonlyArray<InputMaybe<RemoteFileCropFocus>>>;
  fit?: InputMaybe<RemoteFileFit>;
  formats?: InputMaybe<ReadonlyArray<RemoteFileFormat>>;
  height: InputMaybe<Scalars['Int']>;
  layout?: InputMaybe<RemoteFileLayout>;
  outputPixelDensities?: InputMaybe<ReadonlyArray<InputMaybe<Scalars['Float']>>>;
  placeholder?: InputMaybe<RemoteFilePlaceholder>;
  quality?: InputMaybe<Scalars['Int']>;
  sizes: InputMaybe<Scalars['String']>;
  width: InputMaybe<Scalars['Int']>;
};


/** Remote Interface */
type RemoteFile_resizeArgs = {
  aspectRatio: InputMaybe<Scalars['Float']>;
  cropFocus: InputMaybe<ReadonlyArray<InputMaybe<RemoteFileCropFocus>>>;
  fit?: InputMaybe<RemoteFileFit>;
  format?: InputMaybe<RemoteFileFormat>;
  height: InputMaybe<Scalars['Int']>;
  quality?: InputMaybe<Scalars['Int']>;
  width: InputMaybe<Scalars['Int']>;
};

type RemoteFileCropFocus =
  | 'bottom'
  | 'center'
  | 'edges'
  | 'entropy'
  | 'faces'
  | 'left'
  | 'right'
  | 'top';

type RemoteFileFit =
  | 'contain'
  | 'cover'
  | 'fill'
  | 'outside';

type RemoteFileFormat =
  | 'auto'
  | 'avif'
  | 'jpg'
  | 'png'
  | 'webp';

type RemoteFileLayout =
  | 'constrained'
  | 'fixed'
  | 'fullWidth';

type RemoteFilePlaceholder =
  | 'blurred'
  | 'dominantColor'
  | 'none'
  | 'tracedSVG';

type RemoteFileResize = {
  readonly height: Maybe<Scalars['Int']>;
  readonly src: Maybe<Scalars['String']>;
  readonly width: Maybe<Scalars['Int']>;
};

type RemoteFileResizeFilterInput = {
  readonly height: InputMaybe<IntQueryOperatorInput>;
  readonly src: InputMaybe<StringQueryOperatorInput>;
  readonly width: InputMaybe<IntQueryOperatorInput>;
};

type Site = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly graphqlTypegen: Maybe<Scalars['Boolean']>;
  readonly host: Maybe<Scalars['String']>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly jsxRuntime: Maybe<Scalars['String']>;
  readonly parent: Maybe<Node>;
  readonly pathPrefix: Maybe<Scalars['String']>;
  readonly polyfill: Maybe<Scalars['Boolean']>;
  readonly port: Maybe<Scalars['Int']>;
  readonly siteMetadata: Maybe<SiteSiteMetadata>;
  readonly trailingSlash: Maybe<Scalars['String']>;
};


type Site_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadata = Node & {
  readonly buildTime: Maybe<Scalars['Date']>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly parent: Maybe<Node>;
};


type SiteBuildMetadata_buildTimeArgs = {
  difference: InputMaybe<Scalars['String']>;
  formatString: InputMaybe<Scalars['String']>;
  fromNow: InputMaybe<Scalars['Boolean']>;
  locale: InputMaybe<Scalars['String']>;
};

type SiteBuildMetadataConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataEdge = {
  readonly next: Maybe<SiteBuildMetadata>;
  readonly node: SiteBuildMetadata;
  readonly previous: Maybe<SiteBuildMetadata>;
};

type SiteBuildMetadataFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id';

type SiteBuildMetadataFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
};

type SiteBuildMetadataGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteBuildMetadataEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteBuildMetadataGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteBuildMetadata>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteBuildMetadataGroupConnection_distinctArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_groupArgs = {
  field: SiteBuildMetadataFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteBuildMetadataGroupConnection_maxArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_minArgs = {
  field: SiteBuildMetadataFieldsEnum;
};


type SiteBuildMetadataGroupConnection_sumArgs = {
  field: SiteBuildMetadataFieldsEnum;
};

type SiteBuildMetadataSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteBuildMetadataFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SiteEdge = {
  readonly next: Maybe<Site>;
  readonly node: Site;
  readonly previous: Maybe<Site>;
};

type SiteFieldsEnum =
  | 'buildTime'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'graphqlTypegen'
  | 'host'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'jsxRuntime'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pathPrefix'
  | 'polyfill'
  | 'port'
  | 'siteMetadata.description'
  | 'siteMetadata.siteUrl'
  | 'siteMetadata.title'
  | 'trailingSlash';

type SiteFilterInput = {
  readonly buildTime: InputMaybe<DateQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly graphqlTypegen: InputMaybe<BooleanQueryOperatorInput>;
  readonly host: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly jsxRuntime: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pathPrefix: InputMaybe<StringQueryOperatorInput>;
  readonly polyfill: InputMaybe<BooleanQueryOperatorInput>;
  readonly port: InputMaybe<IntQueryOperatorInput>;
  readonly siteMetadata: InputMaybe<SiteSiteMetadataFilterInput>;
  readonly trailingSlash: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunction = Node & {
  readonly absoluteCompiledFilePath: Scalars['String'];
  readonly children: ReadonlyArray<Node>;
  readonly functionRoute: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly matchPath: Maybe<Scalars['String']>;
  readonly originalAbsoluteFilePath: Scalars['String'];
  readonly originalRelativeFilePath: Scalars['String'];
  readonly parent: Maybe<Node>;
  readonly pluginName: Scalars['String'];
  readonly relativeCompiledFilePath: Scalars['String'];
};

type SiteFunctionConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionEdge = {
  readonly next: Maybe<SiteFunction>;
  readonly node: SiteFunction;
  readonly previous: Maybe<SiteFunction>;
};

type SiteFunctionFieldsEnum =
  | 'absoluteCompiledFilePath'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'functionRoute'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'originalAbsoluteFilePath'
  | 'originalRelativeFilePath'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginName'
  | 'relativeCompiledFilePath';

type SiteFunctionFilterInput = {
  readonly absoluteCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly functionRoute: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly originalAbsoluteFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly originalRelativeFilePath: InputMaybe<StringQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginName: InputMaybe<StringQueryOperatorInput>;
  readonly relativeCompiledFilePath: InputMaybe<StringQueryOperatorInput>;
};

type SiteFunctionGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteFunctionEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteFunctionGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SiteFunction>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteFunctionGroupConnection_distinctArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_groupArgs = {
  field: SiteFunctionFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteFunctionGroupConnection_maxArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_minArgs = {
  field: SiteFunctionFieldsEnum;
};


type SiteFunctionGroupConnection_sumArgs = {
  field: SiteFunctionFieldsEnum;
};

type SiteFunctionSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFunctionFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SiteEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SiteGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<Site>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SiteGroupConnection_distinctArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_groupArgs = {
  field: SiteFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SiteGroupConnection_maxArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_minArgs = {
  field: SiteFieldsEnum;
};


type SiteGroupConnection_sumArgs = {
  field: SiteFieldsEnum;
};

type SitePage = Node & {
  readonly children: ReadonlyArray<Node>;
  readonly component: Scalars['String'];
  readonly componentChunkName: Scalars['String'];
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly internalComponentName: Scalars['String'];
  readonly matchPath: Maybe<Scalars['String']>;
  readonly pageContext: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly path: Scalars['String'];
  readonly pluginCreator: Maybe<SitePlugin>;
};

type SitePageConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageEdge = {
  readonly next: Maybe<SitePage>;
  readonly node: SitePage;
  readonly previous: Maybe<SitePage>;
};

type SitePageFieldsEnum =
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'component'
  | 'componentChunkName'
  | 'id'
  | 'internalComponentName'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'matchPath'
  | 'pageContext'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'path'
  | 'pluginCreator.browserAPIs'
  | 'pluginCreator.children'
  | 'pluginCreator.children.children'
  | 'pluginCreator.children.children.children'
  | 'pluginCreator.children.children.id'
  | 'pluginCreator.children.id'
  | 'pluginCreator.children.internal.content'
  | 'pluginCreator.children.internal.contentDigest'
  | 'pluginCreator.children.internal.description'
  | 'pluginCreator.children.internal.fieldOwners'
  | 'pluginCreator.children.internal.ignoreType'
  | 'pluginCreator.children.internal.mediaType'
  | 'pluginCreator.children.internal.owner'
  | 'pluginCreator.children.internal.type'
  | 'pluginCreator.children.parent.children'
  | 'pluginCreator.children.parent.id'
  | 'pluginCreator.id'
  | 'pluginCreator.internal.content'
  | 'pluginCreator.internal.contentDigest'
  | 'pluginCreator.internal.description'
  | 'pluginCreator.internal.fieldOwners'
  | 'pluginCreator.internal.ignoreType'
  | 'pluginCreator.internal.mediaType'
  | 'pluginCreator.internal.owner'
  | 'pluginCreator.internal.type'
  | 'pluginCreator.name'
  | 'pluginCreator.nodeAPIs'
  | 'pluginCreator.packageJson'
  | 'pluginCreator.parent.children'
  | 'pluginCreator.parent.children.children'
  | 'pluginCreator.parent.children.id'
  | 'pluginCreator.parent.id'
  | 'pluginCreator.parent.internal.content'
  | 'pluginCreator.parent.internal.contentDigest'
  | 'pluginCreator.parent.internal.description'
  | 'pluginCreator.parent.internal.fieldOwners'
  | 'pluginCreator.parent.internal.ignoreType'
  | 'pluginCreator.parent.internal.mediaType'
  | 'pluginCreator.parent.internal.owner'
  | 'pluginCreator.parent.internal.type'
  | 'pluginCreator.parent.parent.children'
  | 'pluginCreator.parent.parent.id'
  | 'pluginCreator.pluginFilepath'
  | 'pluginCreator.pluginOptions'
  | 'pluginCreator.resolve'
  | 'pluginCreator.ssrAPIs'
  | 'pluginCreator.version';

type SitePageFilterInput = {
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly component: InputMaybe<StringQueryOperatorInput>;
  readonly componentChunkName: InputMaybe<StringQueryOperatorInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly internalComponentName: InputMaybe<StringQueryOperatorInput>;
  readonly matchPath: InputMaybe<StringQueryOperatorInput>;
  readonly pageContext: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly path: InputMaybe<StringQueryOperatorInput>;
  readonly pluginCreator: InputMaybe<SitePluginFilterInput>;
};

type SitePageGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePageEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePageGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePage>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePageGroupConnection_distinctArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_groupArgs = {
  field: SitePageFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePageGroupConnection_maxArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_minArgs = {
  field: SitePageFieldsEnum;
};


type SitePageGroupConnection_sumArgs = {
  field: SitePageFieldsEnum;
};

type SitePageSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePageFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SitePlugin = Node & {
  readonly browserAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly children: ReadonlyArray<Node>;
  readonly id: Scalars['ID'];
  readonly internal: Internal;
  readonly name: Maybe<Scalars['String']>;
  readonly nodeAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly packageJson: Maybe<Scalars['JSON']>;
  readonly parent: Maybe<Node>;
  readonly pluginFilepath: Maybe<Scalars['String']>;
  readonly pluginOptions: Maybe<Scalars['JSON']>;
  readonly resolve: Maybe<Scalars['String']>;
  readonly ssrAPIs: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly version: Maybe<Scalars['String']>;
};

type SitePluginConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginEdge = {
  readonly next: Maybe<SitePlugin>;
  readonly node: SitePlugin;
  readonly previous: Maybe<SitePlugin>;
};

type SitePluginFieldsEnum =
  | 'browserAPIs'
  | 'children'
  | 'children.children'
  | 'children.children.children'
  | 'children.children.children.children'
  | 'children.children.children.id'
  | 'children.children.id'
  | 'children.children.internal.content'
  | 'children.children.internal.contentDigest'
  | 'children.children.internal.description'
  | 'children.children.internal.fieldOwners'
  | 'children.children.internal.ignoreType'
  | 'children.children.internal.mediaType'
  | 'children.children.internal.owner'
  | 'children.children.internal.type'
  | 'children.children.parent.children'
  | 'children.children.parent.id'
  | 'children.id'
  | 'children.internal.content'
  | 'children.internal.contentDigest'
  | 'children.internal.description'
  | 'children.internal.fieldOwners'
  | 'children.internal.ignoreType'
  | 'children.internal.mediaType'
  | 'children.internal.owner'
  | 'children.internal.type'
  | 'children.parent.children'
  | 'children.parent.children.children'
  | 'children.parent.children.id'
  | 'children.parent.id'
  | 'children.parent.internal.content'
  | 'children.parent.internal.contentDigest'
  | 'children.parent.internal.description'
  | 'children.parent.internal.fieldOwners'
  | 'children.parent.internal.ignoreType'
  | 'children.parent.internal.mediaType'
  | 'children.parent.internal.owner'
  | 'children.parent.internal.type'
  | 'children.parent.parent.children'
  | 'children.parent.parent.id'
  | 'id'
  | 'internal.content'
  | 'internal.contentDigest'
  | 'internal.description'
  | 'internal.fieldOwners'
  | 'internal.ignoreType'
  | 'internal.mediaType'
  | 'internal.owner'
  | 'internal.type'
  | 'name'
  | 'nodeAPIs'
  | 'packageJson'
  | 'parent.children'
  | 'parent.children.children'
  | 'parent.children.children.children'
  | 'parent.children.children.id'
  | 'parent.children.id'
  | 'parent.children.internal.content'
  | 'parent.children.internal.contentDigest'
  | 'parent.children.internal.description'
  | 'parent.children.internal.fieldOwners'
  | 'parent.children.internal.ignoreType'
  | 'parent.children.internal.mediaType'
  | 'parent.children.internal.owner'
  | 'parent.children.internal.type'
  | 'parent.children.parent.children'
  | 'parent.children.parent.id'
  | 'parent.id'
  | 'parent.internal.content'
  | 'parent.internal.contentDigest'
  | 'parent.internal.description'
  | 'parent.internal.fieldOwners'
  | 'parent.internal.ignoreType'
  | 'parent.internal.mediaType'
  | 'parent.internal.owner'
  | 'parent.internal.type'
  | 'parent.parent.children'
  | 'parent.parent.children.children'
  | 'parent.parent.children.id'
  | 'parent.parent.id'
  | 'parent.parent.internal.content'
  | 'parent.parent.internal.contentDigest'
  | 'parent.parent.internal.description'
  | 'parent.parent.internal.fieldOwners'
  | 'parent.parent.internal.ignoreType'
  | 'parent.parent.internal.mediaType'
  | 'parent.parent.internal.owner'
  | 'parent.parent.internal.type'
  | 'parent.parent.parent.children'
  | 'parent.parent.parent.id'
  | 'pluginFilepath'
  | 'pluginOptions'
  | 'resolve'
  | 'ssrAPIs'
  | 'version';

type SitePluginFilterInput = {
  readonly browserAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly children: InputMaybe<NodeFilterListInput>;
  readonly id: InputMaybe<StringQueryOperatorInput>;
  readonly internal: InputMaybe<InternalFilterInput>;
  readonly name: InputMaybe<StringQueryOperatorInput>;
  readonly nodeAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly packageJson: InputMaybe<JSONQueryOperatorInput>;
  readonly parent: InputMaybe<NodeFilterInput>;
  readonly pluginFilepath: InputMaybe<StringQueryOperatorInput>;
  readonly pluginOptions: InputMaybe<JSONQueryOperatorInput>;
  readonly resolve: InputMaybe<StringQueryOperatorInput>;
  readonly ssrAPIs: InputMaybe<StringQueryOperatorInput>;
  readonly version: InputMaybe<StringQueryOperatorInput>;
};

type SitePluginGroupConnection = {
  readonly distinct: ReadonlyArray<Scalars['String']>;
  readonly edges: ReadonlyArray<SitePluginEdge>;
  readonly field: Scalars['String'];
  readonly fieldValue: Maybe<Scalars['String']>;
  readonly group: ReadonlyArray<SitePluginGroupConnection>;
  readonly max: Maybe<Scalars['Float']>;
  readonly min: Maybe<Scalars['Float']>;
  readonly nodes: ReadonlyArray<SitePlugin>;
  readonly pageInfo: PageInfo;
  readonly sum: Maybe<Scalars['Float']>;
  readonly totalCount: Scalars['Int'];
};


type SitePluginGroupConnection_distinctArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_groupArgs = {
  field: SitePluginFieldsEnum;
  limit: InputMaybe<Scalars['Int']>;
  skip: InputMaybe<Scalars['Int']>;
};


type SitePluginGroupConnection_maxArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_minArgs = {
  field: SitePluginFieldsEnum;
};


type SitePluginGroupConnection_sumArgs = {
  field: SitePluginFieldsEnum;
};

type SitePluginSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SitePluginFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SiteSiteMetadata = {
  readonly description: Maybe<Scalars['String']>;
  readonly siteUrl: Maybe<Scalars['String']>;
  readonly title: Maybe<Scalars['String']>;
};

type SiteSiteMetadataFilterInput = {
  readonly description: InputMaybe<StringQueryOperatorInput>;
  readonly siteUrl: InputMaybe<StringQueryOperatorInput>;
  readonly title: InputMaybe<StringQueryOperatorInput>;
};

type SiteSortInput = {
  readonly fields: InputMaybe<ReadonlyArray<InputMaybe<SiteFieldsEnum>>>;
  readonly order: InputMaybe<ReadonlyArray<InputMaybe<SortOrderEnum>>>;
};

type SortOrderEnum =
  | 'ASC'
  | 'DESC';

type StringQueryOperatorInput = {
  readonly eq: InputMaybe<Scalars['String']>;
  readonly glob: InputMaybe<Scalars['String']>;
  readonly in: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly ne: InputMaybe<Scalars['String']>;
  readonly nin: InputMaybe<ReadonlyArray<InputMaybe<Scalars['String']>>>;
  readonly regex: InputMaybe<Scalars['String']>;
};

type TransformOptions = {
  readonly cropFocus: InputMaybe<ImageCropFocus>;
  readonly duotone: InputMaybe<DuotoneGradient>;
  readonly fit: InputMaybe<ImageFit>;
  readonly grayscale: InputMaybe<Scalars['Boolean']>;
  readonly rotate: InputMaybe<Scalars['Int']>;
  readonly trim: InputMaybe<Scalars['Float']>;
};

type WebPOptions = {
  readonly quality: InputMaybe<Scalars['Int']>;
};

type GatsbyImageSharpFixedFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_withWebpFragment = { readonly base64: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFixed_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string };

type GatsbyImageSharpFixed_withWebp_noBase64Fragment = { readonly width: number, readonly height: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null };

type GatsbyImageSharpFluidFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluidLimitPresentationSizeFragment = { readonly maxHeight: number, readonly maxWidth: number };

type GatsbyImageSharpFluid_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_withWebpFragment = { readonly base64: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_tracedSVGFragment = { readonly tracedSVG: string | null, readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type GatsbyImageSharpFluid_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly sizes: string };

type GatsbyImageSharpFluid_withWebp_noBase64Fragment = { readonly aspectRatio: number, readonly src: string, readonly srcSet: string, readonly srcWebp: string | null, readonly srcSetWebp: string | null, readonly sizes: string };

type pageQueryQueryVariables = Exact<{
  id: InputMaybe<Scalars['String']>;
}>;


type pageQueryQuery = { readonly contentfulPage: { readonly id: string, readonly title: string | null, readonly slug: string | null, readonly heading: string | null, readonly subheading: string | null, readonly sections: ReadonlyArray<{ readonly id: string, readonly title: string | null, readonly slug: string | null, readonly type: string | null, readonly heading: string | null, readonly subheading: string | null, readonly components: ReadonlyArray<{ readonly id: string, readonly title: string | null, readonly slug: string | null, readonly label: string | null, readonly date: string | null, readonly heading: string | null, readonly subheading: string | null, readonly richText: { readonly raw: string | null } | null, readonly image: { readonly id: string, readonly altText: string | null, readonly caption: string | null, readonly asset: { readonly id: string, readonly title: string | null, readonly description: string | null, readonly mimeType: string, readonly size: number | null, readonly url: string | null, readonly width: number | null, readonly height: number | null, readonly file: { readonly url: string | null, readonly fileName: string | null, readonly contentType: string | null, readonly details: { readonly size: number | null, readonly image: { readonly width: number | null, readonly height: number | null } | null } | null } | null } | null } | null, readonly links: ReadonlyArray<{ readonly id: string, readonly title: string | null, readonly label: string | null, readonly ref: { readonly id: string, readonly title: string | null, readonly slug: string | null } | null } | null> | null, readonly namedStrings: ReadonlyArray<{ readonly id: string, readonly name: string | null, readonly value: string | null } | null> | null } | null> | null } | null> | null } | null };

type SectionsFragment = { readonly id: string, readonly title: string | null, readonly slug: string | null, readonly type: string | null, readonly heading: string | null, readonly subheading: string | null, readonly components: ReadonlyArray<{ readonly id: string, readonly title: string | null, readonly slug: string | null, readonly label: string | null, readonly date: string | null, readonly heading: string | null, readonly subheading: string | null, readonly richText: { readonly raw: string | null } | null, readonly image: { readonly id: string, readonly altText: string | null, readonly caption: string | null, readonly asset: { readonly id: string, readonly title: string | null, readonly description: string | null, readonly mimeType: string, readonly size: number | null, readonly url: string | null, readonly width: number | null, readonly height: number | null, readonly file: { readonly url: string | null, readonly fileName: string | null, readonly contentType: string | null, readonly details: { readonly size: number | null, readonly image: { readonly width: number | null, readonly height: number | null } | null } | null } | null } | null } | null, readonly links: ReadonlyArray<{ readonly id: string, readonly title: string | null, readonly label: string | null, readonly ref: { readonly id: string, readonly title: string | null, readonly slug: string | null } | null } | null> | null, readonly namedStrings: ReadonlyArray<{ readonly id: string, readonly name: string | null, readonly value: string | null } | null> | null } | null> | null };

type ComponentsFragment = { readonly id: string, readonly title: string | null, readonly slug: string | null, readonly label: string | null, readonly date: string | null, readonly heading: string | null, readonly subheading: string | null, readonly richText: { readonly raw: string | null } | null, readonly image: { readonly id: string, readonly altText: string | null, readonly caption: string | null, readonly asset: { readonly id: string, readonly title: string | null, readonly description: string | null, readonly mimeType: string, readonly size: number | null, readonly url: string | null, readonly width: number | null, readonly height: number | null, readonly file: { readonly url: string | null, readonly fileName: string | null, readonly contentType: string | null, readonly details: { readonly size: number | null, readonly image: { readonly width: number | null, readonly height: number | null } | null } | null } | null } | null } | null, readonly links: ReadonlyArray<{ readonly id: string, readonly title: string | null, readonly label: string | null, readonly ref: { readonly id: string, readonly title: string | null, readonly slug: string | null } | null } | null> | null, readonly namedStrings: ReadonlyArray<{ readonly id: string, readonly name: string | null, readonly value: string | null } | null> | null };

type AssetFragment = { readonly id: string, readonly title: string | null, readonly description: string | null, readonly mimeType: string, readonly size: number | null, readonly url: string | null, readonly width: number | null, readonly height: number | null, readonly file: { readonly url: string | null, readonly fileName: string | null, readonly contentType: string | null, readonly details: { readonly size: number | null, readonly image: { readonly width: number | null, readonly height: number | null } | null } | null } | null };

type ImageFragment = { readonly id: string, readonly altText: string | null, readonly caption: string | null, readonly asset: { readonly id: string, readonly title: string | null, readonly description: string | null, readonly mimeType: string, readonly size: number | null, readonly url: string | null, readonly width: number | null, readonly height: number | null, readonly file: { readonly url: string | null, readonly fileName: string | null, readonly contentType: string | null, readonly details: { readonly size: number | null, readonly image: { readonly width: number | null, readonly height: number | null } | null } | null } | null } | null };

type LinkFragment = { readonly id: string, readonly title: string | null, readonly label: string | null, readonly ref: { readonly id: string, readonly title: string | null, readonly slug: string | null } | null };

type NamedStringFragment = { readonly id: string, readonly name: string | null, readonly value: string | null };


}
